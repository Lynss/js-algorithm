{
  "{\"sourceRoot\":\"/Users/lynss/frontProjects/algorithm/js_algorithm\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lynss/frontProjects/algorithm/js_algorithm\",\"filename\":\"/Users/lynss/frontProjects/algorithm/js_algorithm/my-promise.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lynss/frontProjects/algorithm/js_algorithm\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js_algorithm",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lynss/frontProjects/algorithm/js_algorithm",
      "filename": "/Users/lynss/frontProjects/algorithm/js_algorithm/my-promise.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lynss/frontProjects/algorithm/js_algorithm",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lynss/frontProjects/algorithm/js_algorithm/my-promise.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lynss/frontProjects/algorithm/js_algorithm/my-promise.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lynss/frontProjects/algorithm/js_algorithm",
        "sourceFileName": "my-promise.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar PENDING = Symbol('pending');\nvar FULFILLED = Symbol('fulfilled');\nvar REJECTED = Symbol('rejected');\n\nvar MyPromise =\n/*#__PURE__*/\nfunction () {\n  function MyPromise(executor) {\n    var _this = this;\n\n    _classCallCheck(this, MyPromise);\n\n    _defineProperty(this, \"_status\", void 0);\n\n    _defineProperty(this, \"_value\", void 0);\n\n    _defineProperty(this, \"onResolveCallbacks\", []);\n\n    _defineProperty(this, \"onRejectCallbacks\", []);\n\n    _defineProperty(this, \"onResolve\", function (value) {\n      if (_this._status === PENDING) {\n        _this._status = FULFILLED;\n        _this._value = value;\n\n        _this.onResolveCallbacks.forEach(function (onResolveCallback) {\n          return onResolveCallback();\n        });\n      }\n    });\n\n    _defineProperty(this, \"onReject\", function (value) {\n      if (_this._status === PENDING) {\n        _this._status = REJECTED;\n        _this._value = value;\n\n        _this.onRejectCallbacks.forEach(function (onRejectCallback) {\n          return onRejectCallback();\n        });\n      }\n    });\n\n    this._status = PENDING;\n\n    try {\n      executor(this.onResolve, this.onReject);\n    } catch (e) {\n      this.onReject(e);\n    }\n  }\n\n  _createClass(MyPromise, [{\n    key: \"flatPromise\",\n    value: function flatPromise(targetResult) {\n      var self = this;\n\n      if (self === targetResult) {\n        self.onReject('循环引用');\n        return;\n      }\n\n      var targetType = Object.prototype.toString.call(targetResult);\n\n      if (targetType !== '[object Function]' || targetType !== '[object Object]') {\n        self.onResolve(targetResult);\n        return;\n      }\n\n      try {\n        targetResult.then(function (value) {\n          self.flatPromise(value);\n        });\n      } catch (e) {\n        self.onReject(e);\n      }\n    }\n  }, {\n    key: \"then\",\n    value: function then(onResolve, onReject) {\n      var onFulfilled = typeof onResolve === 'function' ? onResolve : function (value) {\n        return value;\n      }; //因为错误的值要让后面访问到，所以这里也要跑出个错误，不然会在之后then的resolve中捕获\n\n      var onRejected = typeof onReject === 'function' ? onReject : function (err) {\n        throw err;\n      };\n      var self = this;\n      var thenPromise = new MyPromise(function (resolve, reject) {\n        if (self._status === PENDING) {\n          self.onResolveCallbacks.push(function () {\n            setTimeout(function () {\n              try {\n                var result = onFulfilled(self._value);\n                thenPromise.flatPromise(result);\n              } catch (e) {\n                reject(e);\n              }\n            });\n          });\n          self.onRejectCallbacks.push(function () {\n            setTimeout(function () {\n              try {\n                var result = onRejected(self._value);\n                thenPromise.flatPromise(result);\n              } catch (e) {\n                reject(e);\n              }\n            });\n          });\n        } else if (thenPromise._status === FULFILLED) {\n          setTimeout(function () {\n            try {\n              var result = onFulfilled(self._value);\n              thenPromise.flatPromise(result);\n            } catch (e) {\n              reject(e);\n            }\n          });\n        } else if (thenPromise._status === REJECTED) {\n          setTimeout(function () {\n            try {\n              var result = onRejected(self._value);\n              thenPromise.flatPromise(result);\n            } catch (e) {\n              reject(e);\n            }\n          });\n        }\n      });\n      return thenPromise;\n    }\n  }, {\n    key: \"finally\",\n    value: function _finally(fn) {\n      return this.then(function (value) {\n        fn();\n        return value;\n      }, function (reason) {\n        fn();\n        throw reason;\n      });\n    }\n  }], [{\n    key: \"resolve\",\n    value: function resolve(value) {\n      return new MyPromise(function (resolve) {\n        resolve(value);\n      });\n    }\n  }, {\n    key: \"reject\",\n    value: function reject(value) {\n      return new MyPromise(function (resolve, reject) {\n        reject(value);\n      });\n    }\n  }]);\n\n  return MyPromise;\n}();\n\nvar promiseOne = new MyPromise(function (resolve, reject) {\n  setTimeout(function () {\n    if (Math.random() > 0.5) {\n      resolve('success');\n    } else {\n      reject('error');\n    }\n  }, 1000);\n});\npromiseOne.then(console.warn.bind(console), console.error.bind(console))[\"finally\"](function () {\n  return console.info('finally');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm15LXByb21pc2UuanMiXSwibmFtZXMiOlsiUEVORElORyIsIlN5bWJvbCIsIkZVTEZJTExFRCIsIlJFSkVDVEVEIiwiTXlQcm9taXNlIiwiZXhlY3V0b3IiLCJ2YWx1ZSIsIl9zdGF0dXMiLCJfdmFsdWUiLCJvblJlc29sdmVDYWxsYmFja3MiLCJmb3JFYWNoIiwib25SZXNvbHZlQ2FsbGJhY2siLCJvblJlamVjdENhbGxiYWNrcyIsIm9uUmVqZWN0Q2FsbGJhY2siLCJvblJlc29sdmUiLCJvblJlamVjdCIsImUiLCJ0YXJnZXRSZXN1bHQiLCJzZWxmIiwidGFyZ2V0VHlwZSIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiY2FsbCIsInRoZW4iLCJmbGF0UHJvbWlzZSIsIm9uRnVsZmlsbGVkIiwib25SZWplY3RlZCIsImVyciIsInRoZW5Qcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInB1c2giLCJzZXRUaW1lb3V0IiwicmVzdWx0IiwiZm4iLCJyZWFzb24iLCJwcm9taXNlT25lIiwiTWF0aCIsInJhbmRvbSIsImNvbnNvbGUiLCJ3YXJuIiwiYmluZCIsImVycm9yIiwiaW5mbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLElBQU1BLE9BQU8sR0FBR0MsTUFBTSxDQUFDLFNBQUQsQ0FBdEI7QUFDQSxJQUFNQyxTQUFTLEdBQUdELE1BQU0sQ0FBQyxXQUFELENBQXhCO0FBQ0EsSUFBTUUsUUFBUSxHQUFHRixNQUFNLENBQUMsVUFBRCxDQUF2Qjs7SUFFTUcsUzs7O0FBc0JGLHFCQUFZQyxRQUFaLEVBQXNCO0FBQUE7O0FBQUE7O0FBQUE7O0FBQUE7O0FBQUEsZ0RBbkJELEVBbUJDOztBQUFBLCtDQWxCRixFQWtCRTs7QUFBQSx1Q0FoQlYsVUFBQ0MsS0FBRCxFQUFXO0FBQ25CLFVBQUksS0FBSSxDQUFDQyxPQUFMLEtBQWlCUCxPQUFyQixFQUE4QjtBQUMxQixRQUFBLEtBQUksQ0FBQ08sT0FBTCxHQUFlTCxTQUFmO0FBQ0EsUUFBQSxLQUFJLENBQUNNLE1BQUwsR0FBY0YsS0FBZDs7QUFDQSxRQUFBLEtBQUksQ0FBQ0csa0JBQUwsQ0FBd0JDLE9BQXhCLENBQWdDLFVBQUFDLGlCQUFpQjtBQUFBLGlCQUFJQSxpQkFBaUIsRUFBckI7QUFBQSxTQUFqRDtBQUNIO0FBQ0osS0FVcUI7O0FBQUEsc0NBUlgsVUFBQ0wsS0FBRCxFQUFXO0FBQ2xCLFVBQUksS0FBSSxDQUFDQyxPQUFMLEtBQWlCUCxPQUFyQixFQUE4QjtBQUMxQixRQUFBLEtBQUksQ0FBQ08sT0FBTCxHQUFlSixRQUFmO0FBQ0EsUUFBQSxLQUFJLENBQUNLLE1BQUwsR0FBY0YsS0FBZDs7QUFDQSxRQUFBLEtBQUksQ0FBQ00saUJBQUwsQ0FBdUJGLE9BQXZCLENBQStCLFVBQUFHLGdCQUFnQjtBQUFBLGlCQUFJQSxnQkFBZ0IsRUFBcEI7QUFBQSxTQUEvQztBQUNIO0FBQ0osS0FFcUI7O0FBQ2xCLFNBQUtOLE9BQUwsR0FBZVAsT0FBZjs7QUFDQSxRQUFJO0FBQ0FLLE1BQUFBLFFBQVEsQ0FBQyxLQUFLUyxTQUFOLEVBQWlCLEtBQUtDLFFBQXRCLENBQVI7QUFDSCxLQUZELENBRUUsT0FBT0MsQ0FBUCxFQUFVO0FBQ1IsV0FBS0QsUUFBTCxDQUFjQyxDQUFkO0FBQ0g7QUFDSjs7OztnQ0FFV0MsWSxFQUFjO0FBQ3RCLFVBQU1DLElBQUksR0FBRyxJQUFiOztBQUNBLFVBQUlBLElBQUksS0FBS0QsWUFBYixFQUEyQjtBQUN2QkMsUUFBQUEsSUFBSSxDQUFDSCxRQUFMLENBQWMsTUFBZDtBQUNBO0FBQ0g7O0FBQ0QsVUFBTUksVUFBVSxHQUFHQyxNQUFNLENBQUNDLFNBQVAsQ0FBaUJDLFFBQWpCLENBQTBCQyxJQUExQixDQUErQk4sWUFBL0IsQ0FBbkI7O0FBQ0EsVUFBSUUsVUFBVSxLQUFLLG1CQUFmLElBQXNDQSxVQUFVLEtBQUssaUJBQXpELEVBQTRFO0FBQ3hFRCxRQUFBQSxJQUFJLENBQUNKLFNBQUwsQ0FBZUcsWUFBZjtBQUNBO0FBQ0g7O0FBQ0QsVUFBSTtBQUNBQSxRQUFBQSxZQUFZLENBQUNPLElBQWIsQ0FBa0IsVUFBQWxCLEtBQUssRUFBSTtBQUN2QlksVUFBQUEsSUFBSSxDQUFDTyxXQUFMLENBQWlCbkIsS0FBakI7QUFDSCxTQUZEO0FBR0gsT0FKRCxDQUlFLE9BQU9VLENBQVAsRUFBVTtBQUNSRSxRQUFBQSxJQUFJLENBQUNILFFBQUwsQ0FBY0MsQ0FBZDtBQUNIO0FBQ0o7Ozt5QkFFSUYsUyxFQUFXQyxRLEVBQVU7QUFDdEIsVUFBTVcsV0FBVyxHQUFHLE9BQU9aLFNBQVAsS0FBcUIsVUFBckIsR0FBa0NBLFNBQWxDLEdBQThDLFVBQUFSLEtBQUs7QUFBQSxlQUFJQSxLQUFKO0FBQUEsT0FBdkUsQ0FEc0IsQ0FFdEI7O0FBQ0EsVUFBTXFCLFVBQVUsR0FBRyxPQUFPWixRQUFQLEtBQW9CLFVBQXBCLEdBQWlDQSxRQUFqQyxHQUE0QyxVQUFBYSxHQUFHLEVBQUk7QUFDbEUsY0FBTUEsR0FBTjtBQUNILE9BRkQ7QUFHQSxVQUFNVixJQUFJLEdBQUcsSUFBYjtBQUNBLFVBQU1XLFdBQVcsR0FBRyxJQUFJekIsU0FBSixDQUFjLFVBQUMwQixPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDbkQsWUFBSWIsSUFBSSxDQUFDWCxPQUFMLEtBQWlCUCxPQUFyQixFQUE4QjtBQUMxQmtCLFVBQUFBLElBQUksQ0FBQ1Qsa0JBQUwsQ0FBd0J1QixJQUF4QixDQUE2QixZQUFNO0FBQy9CQyxZQUFBQSxVQUFVLENBQUMsWUFBTTtBQUNiLGtCQUFJO0FBQ0Esb0JBQU1DLE1BQU0sR0FBR1IsV0FBVyxDQUFDUixJQUFJLENBQUNWLE1BQU4sQ0FBMUI7QUFDQXFCLGdCQUFBQSxXQUFXLENBQUNKLFdBQVosQ0FBd0JTLE1BQXhCO0FBQ0gsZUFIRCxDQUdFLE9BQU9sQixDQUFQLEVBQVU7QUFDUmUsZ0JBQUFBLE1BQU0sQ0FBQ2YsQ0FBRCxDQUFOO0FBQ0g7QUFDSixhQVBTLENBQVY7QUFRSCxXQVREO0FBVUFFLFVBQUFBLElBQUksQ0FBQ04saUJBQUwsQ0FBdUJvQixJQUF2QixDQUE0QixZQUFNO0FBQzlCQyxZQUFBQSxVQUFVLENBQUMsWUFBTTtBQUNiLGtCQUFJO0FBQ0Esb0JBQU1DLE1BQU0sR0FBR1AsVUFBVSxDQUFDVCxJQUFJLENBQUNWLE1BQU4sQ0FBekI7QUFDQXFCLGdCQUFBQSxXQUFXLENBQUNKLFdBQVosQ0FBd0JTLE1BQXhCO0FBQ0gsZUFIRCxDQUdFLE9BQU9sQixDQUFQLEVBQVU7QUFDUmUsZ0JBQUFBLE1BQU0sQ0FBQ2YsQ0FBRCxDQUFOO0FBQ0g7QUFDSixhQVBTLENBQVY7QUFRSCxXQVREO0FBVUgsU0FyQkQsTUFxQk8sSUFBSWEsV0FBVyxDQUFDdEIsT0FBWixLQUF3QkwsU0FBNUIsRUFBdUM7QUFDMUMrQixVQUFBQSxVQUFVLENBQUMsWUFBTTtBQUNiLGdCQUFJO0FBQ0Esa0JBQU1DLE1BQU0sR0FBR1IsV0FBVyxDQUFDUixJQUFJLENBQUNWLE1BQU4sQ0FBMUI7QUFDQXFCLGNBQUFBLFdBQVcsQ0FBQ0osV0FBWixDQUF3QlMsTUFBeEI7QUFDSCxhQUhELENBR0UsT0FBT2xCLENBQVAsRUFBVTtBQUNSZSxjQUFBQSxNQUFNLENBQUNmLENBQUQsQ0FBTjtBQUNIO0FBQ0osV0FQUyxDQUFWO0FBUUgsU0FUTSxNQVNBLElBQUlhLFdBQVcsQ0FBQ3RCLE9BQVosS0FBd0JKLFFBQTVCLEVBQXNDO0FBQ3pDOEIsVUFBQUEsVUFBVSxDQUFDLFlBQU07QUFDYixnQkFBSTtBQUNBLGtCQUFNQyxNQUFNLEdBQUdQLFVBQVUsQ0FBQ1QsSUFBSSxDQUFDVixNQUFOLENBQXpCO0FBQ0FxQixjQUFBQSxXQUFXLENBQUNKLFdBQVosQ0FBd0JTLE1BQXhCO0FBQ0gsYUFIRCxDQUdFLE9BQU9sQixDQUFQLEVBQVU7QUFDUmUsY0FBQUEsTUFBTSxDQUFDZixDQUFELENBQU47QUFDSDtBQUNKLFdBUFMsQ0FBVjtBQVFIO0FBQ0osT0F6Q21CLENBQXBCO0FBMENBLGFBQU9hLFdBQVA7QUFDSDs7OzZCQUVPTSxFLEVBQUk7QUFDUixhQUFPLEtBQUtYLElBQUwsQ0FBVSxVQUFBbEIsS0FBSyxFQUFJO0FBQ3RCNkIsUUFBQUEsRUFBRTtBQUNGLGVBQU83QixLQUFQO0FBQ0gsT0FITSxFQUdKLFVBQUE4QixNQUFNLEVBQUk7QUFDVEQsUUFBQUEsRUFBRTtBQUNGLGNBQU1DLE1BQU47QUFDSCxPQU5NLENBQVA7QUFPSDs7OzRCQUVjOUIsSyxFQUFPO0FBQ2xCLGFBQU8sSUFBSUYsU0FBSixDQUFjLFVBQUMwQixPQUFELEVBQWE7QUFDOUJBLFFBQUFBLE9BQU8sQ0FBQ3hCLEtBQUQsQ0FBUDtBQUNILE9BRk0sQ0FBUDtBQUdIOzs7MkJBRWFBLEssRUFBTztBQUNqQixhQUFPLElBQUlGLFNBQUosQ0FBYyxVQUFDMEIsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3RDQSxRQUFBQSxNQUFNLENBQUN6QixLQUFELENBQU47QUFDSCxPQUZNLENBQVA7QUFHSDs7Ozs7O0FBR0wsSUFBTStCLFVBQVUsR0FBRyxJQUFJakMsU0FBSixDQUFjLFVBQUMwQixPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDbERFLEVBQUFBLFVBQVUsQ0FBQyxZQUFNO0FBQ1QsUUFBSUssSUFBSSxDQUFDQyxNQUFMLEtBQWdCLEdBQXBCLEVBQXlCO0FBQ3JCVCxNQUFBQSxPQUFPLENBQUMsU0FBRCxDQUFQO0FBQ0gsS0FGRCxNQUVPO0FBQ0hDLE1BQUFBLE1BQU0sQ0FBQyxPQUFELENBQU47QUFDSDtBQUNKLEdBTkssRUFPSixJQVBJLENBQVY7QUFRSCxDQVRrQixDQUFuQjtBQVdBTSxVQUFVLENBQUNiLElBQVgsQ0FBZ0JnQixPQUFPLENBQUNDLElBQVIsQ0FBYUMsSUFBYixDQUFrQkYsT0FBbEIsQ0FBaEIsRUFBNENBLE9BQU8sQ0FBQ0csS0FBUixDQUFjRCxJQUFkLENBQW1CRixPQUFuQixDQUE1QyxhQUFpRjtBQUFBLFNBQU1BLE9BQU8sQ0FBQ0ksSUFBUixDQUFhLFNBQWIsQ0FBTjtBQUFBLENBQWpGIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9seW5zcy9mcm9udFByb2plY3RzL2FsZ29yaXRobS9qc19hbGdvcml0aG0iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQRU5ESU5HID0gU3ltYm9sKCdwZW5kaW5nJyk7XG5jb25zdCBGVUxGSUxMRUQgPSBTeW1ib2woJ2Z1bGZpbGxlZCcpO1xuY29uc3QgUkVKRUNURUQgPSBTeW1ib2woJ3JlamVjdGVkJyk7XG5cbmNsYXNzIE15UHJvbWlzZSB7XG4gICAgX3N0YXR1cztcbiAgICBfdmFsdWU7XG4gICAgb25SZXNvbHZlQ2FsbGJhY2tzID0gW107XG4gICAgb25SZWplY3RDYWxsYmFja3MgPSBbXTtcblxuICAgIG9uUmVzb2x2ZSA9ICh2YWx1ZSkgPT4ge1xuICAgICAgICBpZiAodGhpcy5fc3RhdHVzID09PSBQRU5ESU5HKSB7XG4gICAgICAgICAgICB0aGlzLl9zdGF0dXMgPSBGVUxGSUxMRUQ7XG4gICAgICAgICAgICB0aGlzLl92YWx1ZSA9IHZhbHVlO1xuICAgICAgICAgICAgdGhpcy5vblJlc29sdmVDYWxsYmFja3MuZm9yRWFjaChvblJlc29sdmVDYWxsYmFjayA9PiBvblJlc29sdmVDYWxsYmFjaygpKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBvblJlamVjdCA9ICh2YWx1ZSkgPT4ge1xuICAgICAgICBpZiAodGhpcy5fc3RhdHVzID09PSBQRU5ESU5HKSB7XG4gICAgICAgICAgICB0aGlzLl9zdGF0dXMgPSBSRUpFQ1RFRDtcbiAgICAgICAgICAgIHRoaXMuX3ZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgICB0aGlzLm9uUmVqZWN0Q2FsbGJhY2tzLmZvckVhY2gob25SZWplY3RDYWxsYmFjayA9PiBvblJlamVjdENhbGxiYWNrKCkpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0cnVjdG9yKGV4ZWN1dG9yKSB7XG4gICAgICAgIHRoaXMuX3N0YXR1cyA9IFBFTkRJTkc7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBleGVjdXRvcih0aGlzLm9uUmVzb2x2ZSwgdGhpcy5vblJlamVjdCk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRoaXMub25SZWplY3QoZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmbGF0UHJvbWlzZSh0YXJnZXRSZXN1bHQpIHtcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgICAgIGlmIChzZWxmID09PSB0YXJnZXRSZXN1bHQpIHtcbiAgICAgICAgICAgIHNlbGYub25SZWplY3QoJ+W+queOr+W8leeUqCcpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHRhcmdldFR5cGUgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodGFyZ2V0UmVzdWx0KTtcbiAgICAgICAgaWYgKHRhcmdldFR5cGUgIT09ICdbb2JqZWN0IEZ1bmN0aW9uXScgfHwgdGFyZ2V0VHlwZSAhPT0gJ1tvYmplY3QgT2JqZWN0XScpIHtcbiAgICAgICAgICAgIHNlbGYub25SZXNvbHZlKHRhcmdldFJlc3VsdCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHRhcmdldFJlc3VsdC50aGVuKHZhbHVlID0+IHtcbiAgICAgICAgICAgICAgICBzZWxmLmZsYXRQcm9taXNlKHZhbHVlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBzZWxmLm9uUmVqZWN0KGUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdGhlbihvblJlc29sdmUsIG9uUmVqZWN0KSB7XG4gICAgICAgIGNvbnN0IG9uRnVsZmlsbGVkID0gdHlwZW9mIG9uUmVzb2x2ZSA9PT0gJ2Z1bmN0aW9uJyA/IG9uUmVzb2x2ZSA6IHZhbHVlID0+IHZhbHVlO1xuICAgICAgICAvL+WboOS4uumUmeivr+eahOWAvOimgeiuqeWQjumdouiuv+mXruWIsO+8jOaJgOS7pei/memHjOS5n+imgei3keWHuuS4qumUmeivr++8jOS4jeeEtuS8muWcqOS5i+WQjnRoZW7nmoRyZXNvbHZl5Lit5o2V6I63XG4gICAgICAgIGNvbnN0IG9uUmVqZWN0ZWQgPSB0eXBlb2Ygb25SZWplY3QgPT09ICdmdW5jdGlvbicgPyBvblJlamVjdCA6IGVyciA9PiB7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xuICAgICAgICBjb25zdCB0aGVuUHJvbWlzZSA9IG5ldyBNeVByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgaWYgKHNlbGYuX3N0YXR1cyA9PT0gUEVORElORykge1xuICAgICAgICAgICAgICAgIHNlbGYub25SZXNvbHZlQ2FsbGJhY2tzLnB1c2goKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gb25GdWxmaWxsZWQoc2VsZi5fdmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZW5Qcm9taXNlLmZsYXRQcm9taXNlKHJlc3VsdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBzZWxmLm9uUmVqZWN0Q2FsbGJhY2tzLnB1c2goKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gb25SZWplY3RlZChzZWxmLl92YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlblByb21pc2UuZmxhdFByb21pc2UocmVzdWx0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGVuUHJvbWlzZS5fc3RhdHVzID09PSBGVUxGSUxMRUQpIHtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IG9uRnVsZmlsbGVkKHNlbGYuX3ZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoZW5Qcm9taXNlLmZsYXRQcm9taXNlKHJlc3VsdCk7XG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGVuUHJvbWlzZS5fc3RhdHVzID09PSBSRUpFQ1RFRCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gb25SZWplY3RlZChzZWxmLl92YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGVuUHJvbWlzZS5mbGF0UHJvbWlzZShyZXN1bHQpO1xuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGVuUHJvbWlzZTtcbiAgICB9XG5cbiAgICBmaW5hbGx5KGZuKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRoZW4odmFsdWUgPT4ge1xuICAgICAgICAgICAgZm4oKTtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfSwgcmVhc29uID0+IHtcbiAgICAgICAgICAgIGZuKCk7XG4gICAgICAgICAgICB0aHJvdyByZWFzb247XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBzdGF0aWMgcmVzb2x2ZSh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gbmV3IE15UHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICAgICAgcmVzb2x2ZSh2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHN0YXRpYyByZWplY3QodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBNeVByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgcmVqZWN0KHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5jb25zdCBwcm9taXNlT25lID0gbmV3IE15UHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBpZiAoTWF0aC5yYW5kb20oKSA+IDAuNSkge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoJ3N1Y2Nlc3MnKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KCdlcnJvcicpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICwgMTAwMCk7XG59KTtcblxucHJvbWlzZU9uZS50aGVuKGNvbnNvbGUud2Fybi5iaW5kKGNvbnNvbGUpLCBjb25zb2xlLmVycm9yLmJpbmQoY29uc29sZSkpLmZpbmFsbHkoKCkgPT4gY29uc29sZS5pbmZvKCdmaW5hbGx5JykpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "my-promise.js"
      ],
      "names": [
        "PENDING",
        "Symbol",
        "FULFILLED",
        "REJECTED",
        "MyPromise",
        "executor",
        "value",
        "_status",
        "_value",
        "onResolveCallbacks",
        "forEach",
        "onResolveCallback",
        "onRejectCallbacks",
        "onRejectCallback",
        "onResolve",
        "onReject",
        "e",
        "targetResult",
        "self",
        "targetType",
        "Object",
        "prototype",
        "toString",
        "call",
        "then",
        "flatPromise",
        "onFulfilled",
        "onRejected",
        "err",
        "thenPromise",
        "resolve",
        "reject",
        "push",
        "setTimeout",
        "result",
        "fn",
        "reason",
        "promiseOne",
        "Math",
        "random",
        "console",
        "warn",
        "bind",
        "error",
        "info"
      ],
      "mappings": ";;;;;;;;;;AAAA,IAAMA,OAAO,GAAGC,MAAM,CAAC,SAAD,CAAtB;AACA,IAAMC,SAAS,GAAGD,MAAM,CAAC,WAAD,CAAxB;AACA,IAAME,QAAQ,GAAGF,MAAM,CAAC,UAAD,CAAvB;;IAEMG,S;;;AAsBF,qBAAYC,QAAZ,EAAsB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,gDAnBD,EAmBC;;AAAA,+CAlBF,EAkBE;;AAAA,uCAhBV,UAACC,KAAD,EAAW;AACnB,UAAI,KAAI,CAACC,OAAL,KAAiBP,OAArB,EAA8B;AAC1B,QAAA,KAAI,CAACO,OAAL,GAAeL,SAAf;AACA,QAAA,KAAI,CAACM,MAAL,GAAcF,KAAd;;AACA,QAAA,KAAI,CAACG,kBAAL,CAAwBC,OAAxB,CAAgC,UAAAC,iBAAiB;AAAA,iBAAIA,iBAAiB,EAArB;AAAA,SAAjD;AACH;AACJ,KAUqB;;AAAA,sCARX,UAACL,KAAD,EAAW;AAClB,UAAI,KAAI,CAACC,OAAL,KAAiBP,OAArB,EAA8B;AAC1B,QAAA,KAAI,CAACO,OAAL,GAAeJ,QAAf;AACA,QAAA,KAAI,CAACK,MAAL,GAAcF,KAAd;;AACA,QAAA,KAAI,CAACM,iBAAL,CAAuBF,OAAvB,CAA+B,UAAAG,gBAAgB;AAAA,iBAAIA,gBAAgB,EAApB;AAAA,SAA/C;AACH;AACJ,KAEqB;;AAClB,SAAKN,OAAL,GAAeP,OAAf;;AACA,QAAI;AACAK,MAAAA,QAAQ,CAAC,KAAKS,SAAN,EAAiB,KAAKC,QAAtB,CAAR;AACH,KAFD,CAEE,OAAOC,CAAP,EAAU;AACR,WAAKD,QAAL,CAAcC,CAAd;AACH;AACJ;;;;gCAEWC,Y,EAAc;AACtB,UAAMC,IAAI,GAAG,IAAb;;AACA,UAAIA,IAAI,KAAKD,YAAb,EAA2B;AACvBC,QAAAA,IAAI,CAACH,QAAL,CAAc,MAAd;AACA;AACH;;AACD,UAAMI,UAAU,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,YAA/B,CAAnB;;AACA,UAAIE,UAAU,KAAK,mBAAf,IAAsCA,UAAU,KAAK,iBAAzD,EAA4E;AACxED,QAAAA,IAAI,CAACJ,SAAL,CAAeG,YAAf;AACA;AACH;;AACD,UAAI;AACAA,QAAAA,YAAY,CAACO,IAAb,CAAkB,UAAAlB,KAAK,EAAI;AACvBY,UAAAA,IAAI,CAACO,WAAL,CAAiBnB,KAAjB;AACH,SAFD;AAGH,OAJD,CAIE,OAAOU,CAAP,EAAU;AACRE,QAAAA,IAAI,CAACH,QAAL,CAAcC,CAAd;AACH;AACJ;;;yBAEIF,S,EAAWC,Q,EAAU;AACtB,UAAMW,WAAW,GAAG,OAAOZ,SAAP,KAAqB,UAArB,GAAkCA,SAAlC,GAA8C,UAAAR,KAAK;AAAA,eAAIA,KAAJ;AAAA,OAAvE,CADsB,CAEtB;;AACA,UAAMqB,UAAU,GAAG,OAAOZ,QAAP,KAAoB,UAApB,GAAiCA,QAAjC,GAA4C,UAAAa,GAAG,EAAI;AAClE,cAAMA,GAAN;AACH,OAFD;AAGA,UAAMV,IAAI,GAAG,IAAb;AACA,UAAMW,WAAW,GAAG,IAAIzB,SAAJ,CAAc,UAAC0B,OAAD,EAAUC,MAAV,EAAqB;AACnD,YAAIb,IAAI,CAACX,OAAL,KAAiBP,OAArB,EAA8B;AAC1BkB,UAAAA,IAAI,CAACT,kBAAL,CAAwBuB,IAAxB,CAA6B,YAAM;AAC/BC,YAAAA,UAAU,CAAC,YAAM;AACb,kBAAI;AACA,oBAAMC,MAAM,GAAGR,WAAW,CAACR,IAAI,CAACV,MAAN,CAA1B;AACAqB,gBAAAA,WAAW,CAACJ,WAAZ,CAAwBS,MAAxB;AACH,eAHD,CAGE,OAAOlB,CAAP,EAAU;AACRe,gBAAAA,MAAM,CAACf,CAAD,CAAN;AACH;AACJ,aAPS,CAAV;AAQH,WATD;AAUAE,UAAAA,IAAI,CAACN,iBAAL,CAAuBoB,IAAvB,CAA4B,YAAM;AAC9BC,YAAAA,UAAU,CAAC,YAAM;AACb,kBAAI;AACA,oBAAMC,MAAM,GAAGP,UAAU,CAACT,IAAI,CAACV,MAAN,CAAzB;AACAqB,gBAAAA,WAAW,CAACJ,WAAZ,CAAwBS,MAAxB;AACH,eAHD,CAGE,OAAOlB,CAAP,EAAU;AACRe,gBAAAA,MAAM,CAACf,CAAD,CAAN;AACH;AACJ,aAPS,CAAV;AAQH,WATD;AAUH,SArBD,MAqBO,IAAIa,WAAW,CAACtB,OAAZ,KAAwBL,SAA5B,EAAuC;AAC1C+B,UAAAA,UAAU,CAAC,YAAM;AACb,gBAAI;AACA,kBAAMC,MAAM,GAAGR,WAAW,CAACR,IAAI,CAACV,MAAN,CAA1B;AACAqB,cAAAA,WAAW,CAACJ,WAAZ,CAAwBS,MAAxB;AACH,aAHD,CAGE,OAAOlB,CAAP,EAAU;AACRe,cAAAA,MAAM,CAACf,CAAD,CAAN;AACH;AACJ,WAPS,CAAV;AAQH,SATM,MASA,IAAIa,WAAW,CAACtB,OAAZ,KAAwBJ,QAA5B,EAAsC;AACzC8B,UAAAA,UAAU,CAAC,YAAM;AACb,gBAAI;AACA,kBAAMC,MAAM,GAAGP,UAAU,CAACT,IAAI,CAACV,MAAN,CAAzB;AACAqB,cAAAA,WAAW,CAACJ,WAAZ,CAAwBS,MAAxB;AACH,aAHD,CAGE,OAAOlB,CAAP,EAAU;AACRe,cAAAA,MAAM,CAACf,CAAD,CAAN;AACH;AACJ,WAPS,CAAV;AAQH;AACJ,OAzCmB,CAApB;AA0CA,aAAOa,WAAP;AACH;;;6BAEOM,E,EAAI;AACR,aAAO,KAAKX,IAAL,CAAU,UAAAlB,KAAK,EAAI;AACtB6B,QAAAA,EAAE;AACF,eAAO7B,KAAP;AACH,OAHM,EAGJ,UAAA8B,MAAM,EAAI;AACTD,QAAAA,EAAE;AACF,cAAMC,MAAN;AACH,OANM,CAAP;AAOH;;;4BAEc9B,K,EAAO;AAClB,aAAO,IAAIF,SAAJ,CAAc,UAAC0B,OAAD,EAAa;AAC9BA,QAAAA,OAAO,CAACxB,KAAD,CAAP;AACH,OAFM,CAAP;AAGH;;;2BAEaA,K,EAAO;AACjB,aAAO,IAAIF,SAAJ,CAAc,UAAC0B,OAAD,EAAUC,MAAV,EAAqB;AACtCA,QAAAA,MAAM,CAACzB,KAAD,CAAN;AACH,OAFM,CAAP;AAGH;;;;;;AAGL,IAAM+B,UAAU,GAAG,IAAIjC,SAAJ,CAAc,UAAC0B,OAAD,EAAUC,MAAV,EAAqB;AAClDE,EAAAA,UAAU,CAAC,YAAM;AACT,QAAIK,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACrBT,MAAAA,OAAO,CAAC,SAAD,CAAP;AACH,KAFD,MAEO;AACHC,MAAAA,MAAM,CAAC,OAAD,CAAN;AACH;AACJ,GANK,EAOJ,IAPI,CAAV;AAQH,CATkB,CAAnB;AAWAM,UAAU,CAACb,IAAX,CAAgBgB,OAAO,CAACC,IAAR,CAAaC,IAAb,CAAkBF,OAAlB,CAAhB,EAA4CA,OAAO,CAACG,KAAR,CAAcD,IAAd,CAAmBF,OAAnB,CAA5C,aAAiF;AAAA,SAAMA,OAAO,CAACI,IAAR,CAAa,SAAb,CAAN;AAAA,CAAjF",
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js_algorithm",
      "sourcesContent": [
        "const PENDING = Symbol('pending');\nconst FULFILLED = Symbol('fulfilled');\nconst REJECTED = Symbol('rejected');\n\nclass MyPromise {\n    _status;\n    _value;\n    onResolveCallbacks = [];\n    onRejectCallbacks = [];\n\n    onResolve = (value) => {\n        if (this._status === PENDING) {\n            this._status = FULFILLED;\n            this._value = value;\n            this.onResolveCallbacks.forEach(onResolveCallback => onResolveCallback());\n        }\n    };\n\n    onReject = (value) => {\n        if (this._status === PENDING) {\n            this._status = REJECTED;\n            this._value = value;\n            this.onRejectCallbacks.forEach(onRejectCallback => onRejectCallback());\n        }\n    };\n\n    constructor(executor) {\n        this._status = PENDING;\n        try {\n            executor(this.onResolve, this.onReject);\n        } catch (e) {\n            this.onReject(e);\n        }\n    }\n\n    flatPromise(targetResult) {\n        const self = this;\n        if (self === targetResult) {\n            self.onReject('循环引用');\n            return;\n        }\n        const targetType = Object.prototype.toString.call(targetResult);\n        if (targetType !== '[object Function]' || targetType !== '[object Object]') {\n            self.onResolve(targetResult);\n            return;\n        }\n        try {\n            targetResult.then(value => {\n                self.flatPromise(value);\n            });\n        } catch (e) {\n            self.onReject(e);\n        }\n    }\n\n    then(onResolve, onReject) {\n        const onFulfilled = typeof onResolve === 'function' ? onResolve : value => value;\n        //因为错误的值要让后面访问到，所以这里也要跑出个错误，不然会在之后then的resolve中捕获\n        const onRejected = typeof onReject === 'function' ? onReject : err => {\n            throw err;\n        };\n        const self = this;\n        const thenPromise = new MyPromise((resolve, reject) => {\n            if (self._status === PENDING) {\n                self.onResolveCallbacks.push(() => {\n                    setTimeout(() => {\n                        try {\n                            const result = onFulfilled(self._value);\n                            thenPromise.flatPromise(result);\n                        } catch (e) {\n                            reject(e);\n                        }\n                    });\n                });\n                self.onRejectCallbacks.push(() => {\n                    setTimeout(() => {\n                        try {\n                            const result = onRejected(self._value);\n                            thenPromise.flatPromise(result);\n                        } catch (e) {\n                            reject(e);\n                        }\n                    });\n                });\n            } else if (thenPromise._status === FULFILLED) {\n                setTimeout(() => {\n                    try {\n                        const result = onFulfilled(self._value);\n                        thenPromise.flatPromise(result);\n                    } catch (e) {\n                        reject(e);\n                    }\n                });\n            } else if (thenPromise._status === REJECTED) {\n                setTimeout(() => {\n                    try {\n                        const result = onRejected(self._value);\n                        thenPromise.flatPromise(result);\n                    } catch (e) {\n                        reject(e);\n                    }\n                });\n            }\n        });\n        return thenPromise;\n    }\n\n    finally(fn) {\n        return this.then(value => {\n            fn();\n            return value;\n        }, reason => {\n            fn();\n            throw reason;\n        });\n    };\n\n    static resolve(value) {\n        return new MyPromise((resolve) => {\n            resolve(value);\n        });\n    }\n\n    static reject(value) {\n        return new MyPromise((resolve, reject) => {\n            reject(value);\n        });\n    }\n}\n\nconst promiseOne = new MyPromise((resolve, reject) => {\n    setTimeout(() => {\n            if (Math.random() > 0.5) {\n                resolve('success');\n            } else {\n                reject('error');\n            }\n        }\n        , 1000);\n});\n\npromiseOne.then(console.warn.bind(console), console.error.bind(console)).finally(() => console.info('finally'));"
      ]
    },
    "sourceType": "script",
    "mtime": 1565749468767
  },
  "{\"sourceRoot\":\"/Users/lynss/frontProjects/algorithm/js_algorithm\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lynss/frontProjects/algorithm/js_algorithm\",\"filename\":\"/Users/lynss/frontProjects/algorithm/js_algorithm/my-promise.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lynss/frontProjects/algorithm/js_algorithm\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js_algorithm",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lynss/frontProjects/algorithm/js_algorithm",
      "filename": "/Users/lynss/frontProjects/algorithm/js_algorithm/my-promise.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lynss/frontProjects/algorithm/js_algorithm",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lynss/frontProjects/algorithm/js_algorithm/my-promise.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lynss/frontProjects/algorithm/js_algorithm/my-promise.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lynss/frontProjects/algorithm/js_algorithm",
        "sourceFileName": "my-promise.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar PENDING = Symbol('pending');\nvar FULFILLED = Symbol('fulfilled');\nvar REJECTED = Symbol('rejected');\n\nvar MyPromise =\n/*#__PURE__*/\nfunction () {\n  _createClass(MyPromise, [{\n    key: \"onResolve\",\n    value: function onResolve(value) {\n      console.warn(this);\n\n      if (this._status === PENDING) {\n        this._status = FULFILLED;\n        this._value = value;\n        this.onResolveCallbacks.forEach(function (onResolveCallback) {\n          return onResolveCallback();\n        });\n      }\n    }\n  }, {\n    key: \"onReject\",\n    value: function onReject(value) {\n      if (this._status === PENDING) {\n        this._status = REJECTED;\n        this._value = value;\n        this.onRejectCallbacks.forEach(function (onRejectCallback) {\n          return onRejectCallback();\n        });\n      }\n    }\n  }]);\n\n  function MyPromise(executor) {\n    _classCallCheck(this, MyPromise);\n\n    _defineProperty(this, \"_status\", void 0);\n\n    _defineProperty(this, \"_value\", void 0);\n\n    _defineProperty(this, \"onResolveCallbacks\", []);\n\n    _defineProperty(this, \"onRejectCallbacks\", []);\n\n    this._status = PENDING;\n\n    try {\n      executor(this.onResolve, this.onReject);\n    } catch (e) {\n      this.onReject(e);\n    }\n  }\n\n  _createClass(MyPromise, [{\n    key: \"flatPromise\",\n    value: function flatPromise(targetResult) {\n      var self = this;\n\n      if (self === targetResult) {\n        self.onReject('循环引用');\n        return;\n      }\n\n      var targetType = Object.prototype.toString.call(targetResult);\n\n      if (targetType !== '[object Function]' && targetType !== '[object Object]') {\n        self.onResolve(targetResult);\n        return;\n      }\n\n      var then = self.then;\n\n      if (typeof then !== 'function') {\n        self.onResolve(targetResult);\n        return;\n      }\n\n      try {\n        then.call(self, function (value) {\n          self.flatPromise(value);\n        });\n      } catch (e) {\n        self.onReject(e);\n      }\n    }\n  }, {\n    key: \"then\",\n    value: function then(onResolve, onReject) {\n      var _this = this;\n\n      var onFulfilled = typeof onResolve === 'function' ? onResolve : function (value) {\n        return value;\n      }; //因为错误的值要让后面访问到，所以这里也要跑出个错误，不然会在之后then的resolve中捕获\n\n      var onRejected = typeof onReject === 'function' ? onReject : function (err) {\n        throw err;\n      };\n      var self = this;\n      var thenPromise = new MyPromise(function (resolve, reject) {\n        if (self._status === PENDING) {\n          self.onResolveCallbacks.push(function () {\n            setTimeout(function () {\n              try {\n                var result = onFulfilled(_this._value);\n                thenPromise.flatPromise(result);\n              } catch (e) {\n                reject(e);\n              }\n            });\n          });\n          self.onRejectCallbacks.push(function () {\n            setTimeout(function () {\n              try {\n                var result = onRejected(_this._value);\n                thenPromise.flatPromise(result);\n              } catch (e) {\n                reject(e);\n              }\n            });\n          });\n        } else if (thenPromise._status === FULFILLED) {\n          setTimeout(function () {\n            try {\n              var result = onFulfilled(_this._value);\n              thenPromise.flatPromise(result);\n            } catch (e) {\n              reject(e);\n            }\n          });\n        } else if (thenPromise._status === REJECTED) {\n          setTimeout(function () {\n            try {\n              var result = onRejected(_this._value);\n              thenPromise.flatPromise(result);\n            } catch (e) {\n              reject(e);\n            }\n          });\n        }\n      });\n      return thenPromise;\n    }\n  }, {\n    key: \"finally\",\n    value: function _finally(fn) {\n      return this.then(function (value) {\n        fn();\n        return value;\n      }, function (reason) {\n        fn();\n        throw reason;\n      });\n    }\n  }], [{\n    key: \"resolve\",\n    value: function resolve(value) {\n      return new MyPromise(function (resolve) {\n        resolve(value);\n      });\n    }\n  }, {\n    key: \"reject\",\n    value: function reject(value) {\n      return new MyPromise(function (resolve, reject) {\n        reject(value);\n      });\n    }\n  }]);\n\n  return MyPromise;\n}();\n\nvar promiseOne = new MyPromise(function (resolve, reject) {\n  setTimeout(function () {\n    if (Math.random() > 0.5) {\n      resolve('success');\n    } else {\n      reject('error');\n    }\n  });\n});\npromiseOne.then(console.warn.bind(console), console.error.bind(console))[\"finally\"](function () {\n  return console.info('finally');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "my-promise.js"
      ],
      "names": [
        "PENDING",
        "Symbol",
        "FULFILLED",
        "REJECTED",
        "MyPromise",
        "value",
        "console",
        "warn",
        "_status",
        "_value",
        "onResolveCallbacks",
        "forEach",
        "onResolveCallback",
        "onRejectCallbacks",
        "onRejectCallback",
        "executor",
        "onResolve",
        "onReject",
        "e",
        "targetResult",
        "self",
        "targetType",
        "Object",
        "prototype",
        "toString",
        "call",
        "then",
        "flatPromise",
        "onFulfilled",
        "onRejected",
        "err",
        "thenPromise",
        "resolve",
        "reject",
        "push",
        "setTimeout",
        "result",
        "fn",
        "reason",
        "promiseOne",
        "Math",
        "random",
        "bind",
        "error",
        "info"
      ],
      "mappings": ";;;;;;;;;;AAAA,IAAMA,OAAO,GAAGC,MAAM,CAAC,SAAD,CAAtB;AACA,IAAMC,SAAS,GAAGD,MAAM,CAAC,WAAD,CAAxB;AACA,IAAME,QAAQ,GAAGF,MAAM,CAAC,UAAD,CAAvB;;IAEMG,S;;;;;8BAMQC,K,EAAO;AACbC,MAAAA,OAAO,CAACC,IAAR,CAAa,IAAb;;AACA,UAAI,KAAKC,OAAL,KAAiBR,OAArB,EAA8B;AAC1B,aAAKQ,OAAL,GAAeN,SAAf;AACA,aAAKO,MAAL,GAAcJ,KAAd;AACA,aAAKK,kBAAL,CAAwBC,OAAxB,CAAgC,UAAAC,iBAAiB;AAAA,iBAAIA,iBAAiB,EAArB;AAAA,SAAjD;AACH;AACJ;;;6BAEQP,K,EAAO;AACZ,UAAI,KAAKG,OAAL,KAAiBR,OAArB,EAA8B;AAC1B,aAAKQ,OAAL,GAAeL,QAAf;AACA,aAAKM,MAAL,GAAcJ,KAAd;AACA,aAAKQ,iBAAL,CAAuBF,OAAvB,CAA+B,UAAAG,gBAAgB;AAAA,iBAAIA,gBAAgB,EAApB;AAAA,SAA/C;AACH;AACJ;;;AAED,qBAAYC,QAAZ,EAAsB;AAAA;;AAAA;;AAAA;;AAAA,gDApBD,EAoBC;;AAAA,+CAnBF,EAmBE;;AAClB,SAAKP,OAAL,GAAeR,OAAf;;AACA,QAAI;AACAe,MAAAA,QAAQ,CAAC,KAAKC,SAAN,EAAiB,KAAKC,QAAtB,CAAR;AACH,KAFD,CAEE,OAAOC,CAAP,EAAU;AACR,WAAKD,QAAL,CAAcC,CAAd;AACH;AACJ;;;;gCAEWC,Y,EAAc;AACtB,UAAMC,IAAI,GAAG,IAAb;;AACA,UAAIA,IAAI,KAAKD,YAAb,EAA2B;AACvBC,QAAAA,IAAI,CAACH,QAAL,CAAc,MAAd;AACA;AACH;;AACD,UAAMI,UAAU,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,YAA/B,CAAnB;;AACA,UAAIE,UAAU,KAAK,mBAAf,IAAsCA,UAAU,KAAK,iBAAzD,EAA4E;AACxED,QAAAA,IAAI,CAACJ,SAAL,CAAeG,YAAf;AACA;AACH;;AACD,UAAMO,IAAI,GAAGN,IAAI,CAACM,IAAlB;;AACA,UAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC5BN,QAAAA,IAAI,CAACJ,SAAL,CAAeG,YAAf;AACA;AACH;;AACD,UAAI;AACAO,QAAAA,IAAI,CAACD,IAAL,CAAUL,IAAV,EAAgB,UAAAf,KAAK,EAAI;AACrBe,UAAAA,IAAI,CAACO,WAAL,CAAiBtB,KAAjB;AACH,SAFD;AAGH,OAJD,CAIE,OAAOa,CAAP,EAAU;AACRE,QAAAA,IAAI,CAACH,QAAL,CAAcC,CAAd;AACH;AACJ;;;yBAEIF,S,EAAWC,Q,EAAU;AAAA;;AACtB,UAAMW,WAAW,GAAG,OAAOZ,SAAP,KAAqB,UAArB,GAAkCA,SAAlC,GAA8C,UAAAX,KAAK;AAAA,eAAIA,KAAJ;AAAA,OAAvE,CADsB,CAEtB;;AACA,UAAMwB,UAAU,GAAG,OAAOZ,QAAP,KAAoB,UAApB,GAAiCA,QAAjC,GAA4C,UAAAa,GAAG,EAAI;AAClE,cAAMA,GAAN;AACH,OAFD;AAGA,UAAMV,IAAI,GAAG,IAAb;AACA,UAAMW,WAAW,GAAG,IAAI3B,SAAJ,CAAc,UAAC4B,OAAD,EAAUC,MAAV,EAAqB;AACnD,YAAIb,IAAI,CAACZ,OAAL,KAAiBR,OAArB,EAA8B;AAC1BoB,UAAAA,IAAI,CAACV,kBAAL,CAAwBwB,IAAxB,CAA6B,YAAM;AAC/BC,YAAAA,UAAU,CAAC,YAAM;AACb,kBAAI;AACA,oBAAMC,MAAM,GAAGR,WAAW,CAAC,KAAI,CAACnB,MAAN,CAA1B;AACAsB,gBAAAA,WAAW,CAACJ,WAAZ,CAAwBS,MAAxB;AACH,eAHD,CAGE,OAAOlB,CAAP,EAAU;AACRe,gBAAAA,MAAM,CAACf,CAAD,CAAN;AACH;AACJ,aAPS,CAAV;AAQH,WATD;AAUAE,UAAAA,IAAI,CAACP,iBAAL,CAAuBqB,IAAvB,CAA4B,YAAM;AAC9BC,YAAAA,UAAU,CAAC,YAAM;AACb,kBAAI;AACA,oBAAMC,MAAM,GAAGP,UAAU,CAAC,KAAI,CAACpB,MAAN,CAAzB;AACAsB,gBAAAA,WAAW,CAACJ,WAAZ,CAAwBS,MAAxB;AACH,eAHD,CAGE,OAAOlB,CAAP,EAAU;AACRe,gBAAAA,MAAM,CAACf,CAAD,CAAN;AACH;AACJ,aAPS,CAAV;AAQH,WATD;AAUH,SArBD,MAqBO,IAAIa,WAAW,CAACvB,OAAZ,KAAwBN,SAA5B,EAAuC;AAC1CiC,UAAAA,UAAU,CAAC,YAAM;AACb,gBAAI;AACA,kBAAMC,MAAM,GAAGR,WAAW,CAAC,KAAI,CAACnB,MAAN,CAA1B;AACAsB,cAAAA,WAAW,CAACJ,WAAZ,CAAwBS,MAAxB;AACH,aAHD,CAGE,OAAOlB,CAAP,EAAU;AACRe,cAAAA,MAAM,CAACf,CAAD,CAAN;AACH;AACJ,WAPS,CAAV;AAQH,SATM,MASA,IAAIa,WAAW,CAACvB,OAAZ,KAAwBL,QAA5B,EAAsC;AACzCgC,UAAAA,UAAU,CAAC,YAAM;AACb,gBAAI;AACA,kBAAMC,MAAM,GAAGP,UAAU,CAAC,KAAI,CAACpB,MAAN,CAAzB;AACAsB,cAAAA,WAAW,CAACJ,WAAZ,CAAwBS,MAAxB;AACH,aAHD,CAGE,OAAOlB,CAAP,EAAU;AACRe,cAAAA,MAAM,CAACf,CAAD,CAAN;AACH;AACJ,WAPS,CAAV;AAQH;AACJ,OAzCmB,CAApB;AA0CA,aAAOa,WAAP;AACH;;;6BAEOM,E,EAAI;AACR,aAAO,KAAKX,IAAL,CAAU,UAAArB,KAAK,EAAI;AACtBgC,QAAAA,EAAE;AACF,eAAOhC,KAAP;AACH,OAHM,EAGJ,UAAAiC,MAAM,EAAI;AACTD,QAAAA,EAAE;AACF,cAAMC,MAAN;AACH,OANM,CAAP;AAOH;;;4BAEcjC,K,EAAO;AAClB,aAAO,IAAID,SAAJ,CAAc,UAAC4B,OAAD,EAAa;AAC9BA,QAAAA,OAAO,CAAC3B,KAAD,CAAP;AACH,OAFM,CAAP;AAGH;;;2BAEaA,K,EAAO;AACjB,aAAO,IAAID,SAAJ,CAAc,UAAC4B,OAAD,EAAUC,MAAV,EAAqB;AACtCA,QAAAA,MAAM,CAAC5B,KAAD,CAAN;AACH,OAFM,CAAP;AAGH;;;;;;AAGL,IAAMkC,UAAU,GAAG,IAAInC,SAAJ,CAAc,UAAC4B,OAAD,EAAUC,MAAV,EAAqB;AAClDE,EAAAA,UAAU,CAAC,YAAM;AACT,QAAIK,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACrBT,MAAAA,OAAO,CAAC,SAAD,CAAP;AACH,KAFD,MAEO;AACHC,MAAAA,MAAM,CAAC,OAAD,CAAN;AACH;AACJ,GANK,CAAV;AAQH,CATkB,CAAnB;AAWAM,UAAU,CAACb,IAAX,CAAgBpB,OAAO,CAACC,IAAR,CAAamC,IAAb,CAAkBpC,OAAlB,CAAhB,EAA4CA,OAAO,CAACqC,KAAR,CAAcD,IAAd,CAAmBpC,OAAnB,CAA5C,aAAiF;AAAA,SAAMA,OAAO,CAACsC,IAAR,CAAa,SAAb,CAAN;AAAA,CAAjF",
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js_algorithm",
      "sourcesContent": [
        "const PENDING = Symbol('pending');\nconst FULFILLED = Symbol('fulfilled');\nconst REJECTED = Symbol('rejected');\n\nclass MyPromise {\n    _status;\n    _value;\n    onResolveCallbacks = [];\n    onRejectCallbacks = [];\n\n    onResolve(value) {\n        console.warn(this);\n        if (this._status === PENDING) {\n            this._status = FULFILLED;\n            this._value = value;\n            this.onResolveCallbacks.forEach(onResolveCallback => onResolveCallback());\n        }\n    };\n\n    onReject(value) {\n        if (this._status === PENDING) {\n            this._status = REJECTED;\n            this._value = value;\n            this.onRejectCallbacks.forEach(onRejectCallback => onRejectCallback());\n        }\n    };\n\n    constructor(executor) {\n        this._status = PENDING;\n        try {\n            executor(this.onResolve, this.onReject);\n        } catch (e) {\n            this.onReject(e);\n        }\n    }\n\n    flatPromise(targetResult) {\n        const self = this;\n        if (self === targetResult) {\n            self.onReject('循环引用');\n            return;\n        }\n        const targetType = Object.prototype.toString.call(targetResult);\n        if (targetType !== '[object Function]' && targetType !== '[object Object]') {\n            self.onResolve(targetResult);\n            return;\n        }\n        const then = self.then;\n        if (typeof then !== 'function') {\n            self.onResolve(targetResult);\n            return;\n        }\n        try {\n            then.call(self, value => {\n                self.flatPromise(value);\n            });\n        } catch (e) {\n            self.onReject(e);\n        }\n    }\n\n    then(onResolve, onReject) {\n        const onFulfilled = typeof onResolve === 'function' ? onResolve : value => value;\n        //因为错误的值要让后面访问到，所以这里也要跑出个错误，不然会在之后then的resolve中捕获\n        const onRejected = typeof onReject === 'function' ? onReject : err => {\n            throw err;\n        };\n        const self = this;\n        const thenPromise = new MyPromise((resolve, reject) => {\n            if (self._status === PENDING) {\n                self.onResolveCallbacks.push(() => {\n                    setTimeout(() => {\n                        try {\n                            const result = onFulfilled(this._value);\n                            thenPromise.flatPromise(result);\n                        } catch (e) {\n                            reject(e);\n                        }\n                    });\n                });\n                self.onRejectCallbacks.push(() => {\n                    setTimeout(() => {\n                        try {\n                            const result = onRejected(this._value);\n                            thenPromise.flatPromise(result);\n                        } catch (e) {\n                            reject(e);\n                        }\n                    });\n                });\n            } else if (thenPromise._status === FULFILLED) {\n                setTimeout(() => {\n                    try {\n                        const result = onFulfilled(this._value);\n                        thenPromise.flatPromise(result);\n                    } catch (e) {\n                        reject(e);\n                    }\n                });\n            } else if (thenPromise._status === REJECTED) {\n                setTimeout(() => {\n                    try {\n                        const result = onRejected(this._value);\n                        thenPromise.flatPromise(result);\n                    } catch (e) {\n                        reject(e);\n                    }\n                });\n            }\n        });\n        return thenPromise;\n    }\n\n    finally(fn) {\n        return this.then(value => {\n            fn();\n            return value;\n        }, reason => {\n            fn();\n            throw reason;\n        });\n    };\n\n    static resolve(value) {\n        return new MyPromise((resolve) => {\n            resolve(value);\n        });\n    }\n\n    static reject(value) {\n        return new MyPromise((resolve, reject) => {\n            reject(value);\n        });\n    }\n}\n\nconst promiseOne = new MyPromise((resolve, reject) => {\n    setTimeout(() => {\n            if (Math.random() > 0.5) {\n                resolve('success');\n            } else {\n                reject('error');\n            }\n        },\n    );\n});\n\npromiseOne.then(console.warn.bind(console), console.error.bind(console)).finally(() => console.info('finally'));"
      ]
    },
    "sourceType": "script",
    "mtime": 1565748793382
  },
  "{\"sourceRoot\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"filename\":\"/Users/lynss/frontProjects/algorithm/js-algorithm/byte-dance-1.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "filename": "/Users/lynss/frontProjects/algorithm/js-algorithm/byte-dance-1.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lynss/frontProjects/algorithm/js-algorithm/byte-dance-1.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lynss/frontProjects/algorithm/js-algorithm/byte-dance-1.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm",
        "sourceFileName": "byte-dance-1.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction byteDanceOne(userNum, degrees, groupNum, groups) {\n  return groups.map(function (group) {\n    var _group = _slicedToArray(group, 3),\n        left = _group[0],\n        right = _group[1],\n        k = _group[2];\n\n    return _lodash[\"default\"].slice(degrees, left - 1, right).filter(function (degree) {\n      return degree === k;\n    }).length;\n  });\n}\n\nvar result = byteDanceOne(5, [1, 2, 3, 3, 5], 3, [[1, 2, 1], [2, 4, 5], [3, 5, 3]]);\nconsole.warn(result);\nconsole.assert(_lodash[\"default\"].isEqual(result, [1, 0, 2]), 'byteDanceOne failed');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ5dGUtZGFuY2UtMS5qcyJdLCJuYW1lcyI6WyJieXRlRGFuY2VPbmUiLCJ1c2VyTnVtIiwiZGVncmVlcyIsImdyb3VwTnVtIiwiZ3JvdXBzIiwibWFwIiwiZ3JvdXAiLCJsZWZ0IiwicmlnaHQiLCJrIiwiXyIsInNsaWNlIiwiZmlsdGVyIiwiZGVncmVlIiwibGVuZ3RoIiwicmVzdWx0IiwiY29uc29sZSIsIndhcm4iLCJhc3NlcnQiLCJpc0VxdWFsIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7QUFFQSxTQUFTQSxZQUFULENBQXNCQyxPQUF0QixFQUErQkMsT0FBL0IsRUFBd0NDLFFBQXhDLEVBQWtEQyxNQUFsRCxFQUEwRDtBQUN0RCxTQUFPQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxVQUFBQyxLQUFLLEVBQUk7QUFBQSxnQ0FDRUEsS0FERjtBQUFBLFFBQ2hCQyxJQURnQjtBQUFBLFFBQ1ZDLEtBRFU7QUFBQSxRQUNIQyxDQURHOztBQUV2QixXQUFPQyxtQkFBRUMsS0FBRixDQUFRVCxPQUFSLEVBQWlCSyxJQUFJLEdBQUcsQ0FBeEIsRUFBMkJDLEtBQTNCLEVBQWtDSSxNQUFsQyxDQUF5QyxVQUFBQyxNQUFNO0FBQUEsYUFBSUEsTUFBTSxLQUFLSixDQUFmO0FBQUEsS0FBL0MsRUFBaUVLLE1BQXhFO0FBQ0gsR0FITSxDQUFQO0FBSUg7O0FBRUQsSUFBTUMsTUFBTSxHQUFHZixZQUFZLENBQUMsQ0FBRCxFQUFJLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLEVBQVUsQ0FBVixFQUFhLENBQWIsQ0FBSixFQUFxQixDQUFyQixFQUF3QixDQUMvQyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxDQUQrQyxFQUUvQyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxDQUYrQyxFQUcvQyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxDQUgrQyxDQUF4QixDQUEzQjtBQUtBZ0IsT0FBTyxDQUFDQyxJQUFSLENBQWFGLE1BQWI7QUFDQUMsT0FBTyxDQUFDRSxNQUFSLENBQWVSLG1CQUFFUyxPQUFGLENBQVVKLE1BQVYsRUFBa0IsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsQ0FBbEIsQ0FBZixFQUE2QyxxQkFBN0MiLCJzb3VyY2VSb290IjoiL1VzZXJzL2x5bnNzL2Zyb250UHJvamVjdHMvYWxnb3JpdGhtL2pzLWFsZ29yaXRobSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmZ1bmN0aW9uIGJ5dGVEYW5jZU9uZSh1c2VyTnVtLCBkZWdyZWVzLCBncm91cE51bSwgZ3JvdXBzKSB7XG4gICAgcmV0dXJuIGdyb3Vwcy5tYXAoZ3JvdXAgPT4ge1xuICAgICAgICBjb25zdCBbbGVmdCwgcmlnaHQsIGtdID0gZ3JvdXA7XG4gICAgICAgIHJldHVybiBfLnNsaWNlKGRlZ3JlZXMsIGxlZnQgLSAxLCByaWdodCkuZmlsdGVyKGRlZ3JlZSA9PiBkZWdyZWUgPT09IGspLmxlbmd0aDtcbiAgICB9KTtcbn1cblxuY29uc3QgcmVzdWx0ID0gYnl0ZURhbmNlT25lKDUsIFsxLCAyLCAzLCAzLCA1XSwgMywgW1xuICAgIFsxLCAyLCAxXSxcbiAgICBbMiwgNCwgNV0sXG4gICAgWzMsIDUsIDNdLFxuXSk7XG5jb25zb2xlLndhcm4ocmVzdWx0KTtcbmNvbnNvbGUuYXNzZXJ0KF8uaXNFcXVhbChyZXN1bHQsIFsxLCAwLCAyXSksICdieXRlRGFuY2VPbmUgZmFpbGVkJyk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "byte-dance-1.js"
      ],
      "names": [
        "byteDanceOne",
        "userNum",
        "degrees",
        "groupNum",
        "groups",
        "map",
        "group",
        "left",
        "right",
        "k",
        "_",
        "slice",
        "filter",
        "degree",
        "length",
        "result",
        "console",
        "warn",
        "assert",
        "isEqual"
      ],
      "mappings": ";;AAAA;;;;;;;;;;;;AAEA,SAASA,YAAT,CAAsBC,OAAtB,EAA+BC,OAA/B,EAAwCC,QAAxC,EAAkDC,MAAlD,EAA0D;AACtD,SAAOA,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK,EAAI;AAAA,gCACEA,KADF;AAAA,QAChBC,IADgB;AAAA,QACVC,KADU;AAAA,QACHC,CADG;;AAEvB,WAAOC,mBAAEC,KAAF,CAAQT,OAAR,EAAiBK,IAAI,GAAG,CAAxB,EAA2BC,KAA3B,EAAkCI,MAAlC,CAAyC,UAAAC,MAAM;AAAA,aAAIA,MAAM,KAAKJ,CAAf;AAAA,KAA/C,EAAiEK,MAAxE;AACH,GAHM,CAAP;AAIH;;AAED,IAAMC,MAAM,GAAGf,YAAY,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAJ,EAAqB,CAArB,EAAwB,CAC/C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAD+C,EAE/C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAF+C,EAG/C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAH+C,CAAxB,CAA3B;AAKAgB,OAAO,CAACC,IAAR,CAAaF,MAAb;AACAC,OAAO,CAACE,MAAR,CAAeR,mBAAES,OAAF,CAAUJ,MAAV,EAAkB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAlB,CAAf,EAA6C,qBAA7C",
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "sourcesContent": [
        "import _ from 'lodash';\n\nfunction byteDanceOne(userNum, degrees, groupNum, groups) {\n    return groups.map(group => {\n        const [left, right, k] = group;\n        return _.slice(degrees, left - 1, right).filter(degree => degree === k).length;\n    });\n}\n\nconst result = byteDanceOne(5, [1, 2, 3, 3, 5], 3, [\n    [1, 2, 1],\n    [2, 4, 5],\n    [3, 5, 3],\n]);\nconsole.warn(result);\nconsole.assert(_.isEqual(result, [1, 0, 2]), 'byteDanceOne failed');\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1565746822203
  },
  "{\"sourceRoot\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"filename\":\"/Users/lynss/frontProjects/algorithm/js-algorithm/byte-dance-1.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "filename": "/Users/lynss/frontProjects/algorithm/js-algorithm/byte-dance-1.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lynss/frontProjects/algorithm/js-algorithm/byte-dance-1.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lynss/frontProjects/algorithm/js-algorithm/byte-dance-1.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm",
        "sourceFileName": "byte-dance-1.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction byteDanceOne(userNum, degrees, groupNum, groups) {\n  return groups.map(function (group) {\n    var _group = _slicedToArray(group, 3),\n        left = _group[0],\n        right = _group[1],\n        k = _group[2];\n\n    return _lodash[\"default\"].slice(degrees, left - 1, right).filter(function (degree) {\n      return degree === k;\n    }).length;\n  });\n}\n\nvar result = byteDanceOne(5, [1, 2, 3, 3, 5], 3, [[1, 2, 1], [2, 4, 5], [3, 5, 3]]);\nconsole.warn(result);\nconsole.assert(_lodash[\"default\"].isEqual(result, [1, 0, 2]), 'byteDanceOne failed');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ5dGUtZGFuY2UtMS5qcyJdLCJuYW1lcyI6WyJieXRlRGFuY2VPbmUiLCJ1c2VyTnVtIiwiZGVncmVlcyIsImdyb3VwTnVtIiwiZ3JvdXBzIiwibWFwIiwiZ3JvdXAiLCJsZWZ0IiwicmlnaHQiLCJrIiwiXyIsInNsaWNlIiwiZmlsdGVyIiwiZGVncmVlIiwibGVuZ3RoIiwicmVzdWx0IiwiY29uc29sZSIsIndhcm4iLCJhc3NlcnQiLCJpc0VxdWFsIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7QUFFQSxTQUFTQSxZQUFULENBQXNCQyxPQUF0QixFQUErQkMsT0FBL0IsRUFBd0NDLFFBQXhDLEVBQWtEQyxNQUFsRCxFQUEwRDtBQUN0RCxTQUFPQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxVQUFBQyxLQUFLLEVBQUk7QUFBQSxnQ0FDRUEsS0FERjtBQUFBLFFBQ2hCQyxJQURnQjtBQUFBLFFBQ1ZDLEtBRFU7QUFBQSxRQUNIQyxDQURHOztBQUV2QixXQUFPQyxtQkFBRUMsS0FBRixDQUFRVCxPQUFSLEVBQWlCSyxJQUFJLEdBQUcsQ0FBeEIsRUFBMkJDLEtBQTNCLEVBQWtDSSxNQUFsQyxDQUF5QyxVQUFBQyxNQUFNO0FBQUEsYUFBSUEsTUFBTSxLQUFLSixDQUFmO0FBQUEsS0FBL0MsRUFBaUVLLE1BQXhFO0FBQ0gsR0FITSxDQUFQO0FBSUg7O0FBRUQsSUFBTUMsTUFBTSxHQUFHZixZQUFZLENBQUMsQ0FBRCxFQUFJLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLEVBQVUsQ0FBVixFQUFhLENBQWIsQ0FBSixFQUFxQixDQUFyQixFQUF3QixDQUMvQyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxDQUQrQyxFQUUvQyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxDQUYrQyxFQUcvQyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxDQUgrQyxDQUF4QixDQUEzQjtBQU1BZ0IsT0FBTyxDQUFDQyxJQUFSLENBQWFGLE1BQWI7QUFDQUMsT0FBTyxDQUFDRSxNQUFSLENBQWVSLG1CQUFFUyxPQUFGLENBQVVKLE1BQVYsRUFBa0IsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsQ0FBbEIsQ0FBZixFQUE2QyxxQkFBN0MiLCJzb3VyY2VSb290IjoiL1VzZXJzL2x5bnNzL2Zyb250UHJvamVjdHMvYWxnb3JpdGhtL2pzLWFsZ29yaXRobSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmZ1bmN0aW9uIGJ5dGVEYW5jZU9uZSh1c2VyTnVtLCBkZWdyZWVzLCBncm91cE51bSwgZ3JvdXBzKSB7XG4gICAgcmV0dXJuIGdyb3Vwcy5tYXAoZ3JvdXAgPT4ge1xuICAgICAgICBjb25zdCBbbGVmdCwgcmlnaHQsIGtdID0gZ3JvdXA7XG4gICAgICAgIHJldHVybiBfLnNsaWNlKGRlZ3JlZXMsIGxlZnQgLSAxLCByaWdodCkuZmlsdGVyKGRlZ3JlZSA9PiBkZWdyZWUgPT09IGspLmxlbmd0aDtcbiAgICB9KTtcbn1cblxuY29uc3QgcmVzdWx0ID0gYnl0ZURhbmNlT25lKDUsIFsxLCAyLCAzLCAzLCA1XSwgMywgW1xuICAgIFsxLCAyLCAxXSxcbiAgICBbMiwgNCwgNV0sXG4gICAgWzMsIDUsIDNdLFxuXSk7XG5cbmNvbnNvbGUud2FybihyZXN1bHQpO1xuY29uc29sZS5hc3NlcnQoXy5pc0VxdWFsKHJlc3VsdCwgWzEsIDAsIDJdKSwgJ2J5dGVEYW5jZU9uZSBmYWlsZWQnKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "byte-dance-1.js"
      ],
      "names": [
        "byteDanceOne",
        "userNum",
        "degrees",
        "groupNum",
        "groups",
        "map",
        "group",
        "left",
        "right",
        "k",
        "_",
        "slice",
        "filter",
        "degree",
        "length",
        "result",
        "console",
        "warn",
        "assert",
        "isEqual"
      ],
      "mappings": ";;AAAA;;;;;;;;;;;;AAEA,SAASA,YAAT,CAAsBC,OAAtB,EAA+BC,OAA/B,EAAwCC,QAAxC,EAAkDC,MAAlD,EAA0D;AACtD,SAAOA,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK,EAAI;AAAA,gCACEA,KADF;AAAA,QAChBC,IADgB;AAAA,QACVC,KADU;AAAA,QACHC,CADG;;AAEvB,WAAOC,mBAAEC,KAAF,CAAQT,OAAR,EAAiBK,IAAI,GAAG,CAAxB,EAA2BC,KAA3B,EAAkCI,MAAlC,CAAyC,UAAAC,MAAM;AAAA,aAAIA,MAAM,KAAKJ,CAAf;AAAA,KAA/C,EAAiEK,MAAxE;AACH,GAHM,CAAP;AAIH;;AAED,IAAMC,MAAM,GAAGf,YAAY,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAJ,EAAqB,CAArB,EAAwB,CAC/C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAD+C,EAE/C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAF+C,EAG/C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAH+C,CAAxB,CAA3B;AAMAgB,OAAO,CAACC,IAAR,CAAaF,MAAb;AACAC,OAAO,CAACE,MAAR,CAAeR,mBAAES,OAAF,CAAUJ,MAAV,EAAkB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAlB,CAAf,EAA6C,qBAA7C",
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "sourcesContent": [
        "import _ from 'lodash';\n\nfunction byteDanceOne(userNum, degrees, groupNum, groups) {\n    return groups.map(group => {\n        const [left, right, k] = group;\n        return _.slice(degrees, left - 1, right).filter(degree => degree === k).length;\n    });\n}\n\nconst result = byteDanceOne(5, [1, 2, 3, 3, 5], 3, [\n    [1, 2, 1],\n    [2, 4, 5],\n    [3, 5, 3],\n]);\n\nconsole.warn(result);\nconsole.assert(_.isEqual(result, [1, 0, 2]), 'byteDanceOne failed');\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566531325129
  },
  "{\"sourceRoot\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"filename\":\"/Users/lynss/frontProjects/algorithm/js-algorithm/topK-frequent.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "filename": "/Users/lynss/frontProjects/algorithm/js-algorithm/topK-frequent.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lynss/frontProjects/algorithm/js-algorithm/topK-frequent.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lynss/frontProjects/algorithm/js-algorithm/topK-frequent.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm",
        "sourceFileName": "topK-frequent.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * @param {string[]} words\n * @param {number} k\n * @return {string[]}\n */\nvar topKFrequent = function topKFrequent(words, k) {\n  var result = new Map();\n\n  _lodash[\"default\"].each(words, function (word) {\n    var before = result.get(word) || 0;\n    result.set(word, before + 1);\n  });\n\n  return _lodash[\"default\"].chain(_toConsumableArray(result)).sort(function (a, b) {\n    return b[1] - a[1] || b[0].localeCompare(a[0]);\n  }).take(k).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n        value = _ref2[0];\n\n    return value;\n  }).value();\n};\n\nconsole.warn(topKFrequent(['i', 'love', 'leetcode', 'i', 'love', 'coding'], 3));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvcEstZnJlcXVlbnQuanMiXSwibmFtZXMiOlsidG9wS0ZyZXF1ZW50Iiwid29yZHMiLCJrIiwicmVzdWx0IiwiTWFwIiwiXyIsImVhY2giLCJ3b3JkIiwiYmVmb3JlIiwiZ2V0Iiwic2V0IiwiY2hhaW4iLCJzb3J0IiwiYSIsImIiLCJsb2NhbGVDb21wYXJlIiwidGFrZSIsIm1hcCIsInZhbHVlIiwiY29uc29sZSIsIndhcm4iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUE7Ozs7O0FBS0EsSUFBSUEsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBVUMsS0FBVixFQUFpQkMsQ0FBakIsRUFBb0I7QUFDbkMsTUFBTUMsTUFBTSxHQUFHLElBQUlDLEdBQUosRUFBZjs7QUFDQUMscUJBQUVDLElBQUYsQ0FBT0wsS0FBUCxFQUFjLFVBQUFNLElBQUksRUFBSTtBQUNsQixRQUFJQyxNQUFNLEdBQUdMLE1BQU0sQ0FBQ00sR0FBUCxDQUFXRixJQUFYLEtBQW9CLENBQWpDO0FBQ0FKLElBQUFBLE1BQU0sQ0FBQ08sR0FBUCxDQUFXSCxJQUFYLEVBQWlCQyxNQUFNLEdBQUcsQ0FBMUI7QUFDSCxHQUhEOztBQUlBLFNBQU9ILG1CQUFFTSxLQUFGLG9CQUFZUixNQUFaLEdBQ0ZTLElBREUsQ0FDRyxVQUFDQyxDQUFELEVBQUlDLENBQUo7QUFBQSxXQUFVQSxDQUFDLENBQUMsQ0FBRCxDQUFELEdBQU9ELENBQUMsQ0FBQyxDQUFELENBQVIsSUFBZUMsQ0FBQyxDQUFDLENBQUQsQ0FBRCxDQUFLQyxhQUFMLENBQW1CRixDQUFDLENBQUMsQ0FBRCxDQUFwQixDQUF6QjtBQUFBLEdBREgsRUFFRkcsSUFGRSxDQUVHZCxDQUZILEVBR0ZlLEdBSEUsQ0FHRTtBQUFBO0FBQUEsUUFBRUMsS0FBRjs7QUFBQSxXQUFhQSxLQUFiO0FBQUEsR0FIRixFQUlGQSxLQUpFLEVBQVA7QUFLSCxDQVhEOztBQWFBQyxPQUFPLENBQUNDLElBQVIsQ0FBYXBCLFlBQVksQ0FBQyxDQUFDLEdBQUQsRUFBTSxNQUFOLEVBQWMsVUFBZCxFQUEwQixHQUExQixFQUErQixNQUEvQixFQUF1QyxRQUF2QyxDQUFELEVBQW1ELENBQW5ELENBQXpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9seW5zcy9mcm9udFByb2plY3RzL2FsZ29yaXRobS9qcy1hbGdvcml0aG0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nW119IHdvcmRzXG4gKiBAcGFyYW0ge251bWJlcn0ga1xuICogQHJldHVybiB7c3RyaW5nW119XG4gKi9cbnZhciB0b3BLRnJlcXVlbnQgPSBmdW5jdGlvbiAod29yZHMsIGspIHtcbiAgICBjb25zdCByZXN1bHQgPSBuZXcgTWFwKCk7XG4gICAgXy5lYWNoKHdvcmRzLCB3b3JkID0+IHtcbiAgICAgICAgbGV0IGJlZm9yZSA9IHJlc3VsdC5nZXQod29yZCkgfHwgMDtcbiAgICAgICAgcmVzdWx0LnNldCh3b3JkLCBiZWZvcmUgKyAxKTtcbiAgICB9KTtcbiAgICByZXR1cm4gXy5jaGFpbihbLi4ucmVzdWx0XSlcbiAgICAgICAgLnNvcnQoKGEsIGIpID0+IGJbMV0gLSBhWzFdIHx8IGJbMF0ubG9jYWxlQ29tcGFyZShhWzBdKSlcbiAgICAgICAgLnRha2UoaylcbiAgICAgICAgLm1hcCgoW3ZhbHVlXSkgPT4gdmFsdWUpXG4gICAgICAgIC52YWx1ZSgpO1xufTtcblxuY29uc29sZS53YXJuKHRvcEtGcmVxdWVudChbJ2knLCAnbG92ZScsICdsZWV0Y29kZScsICdpJywgJ2xvdmUnLCAnY29kaW5nJ10sIDMpKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "topK-frequent.js"
      ],
      "names": [
        "topKFrequent",
        "words",
        "k",
        "result",
        "Map",
        "_",
        "each",
        "word",
        "before",
        "get",
        "set",
        "chain",
        "sort",
        "a",
        "b",
        "localeCompare",
        "take",
        "map",
        "value",
        "console",
        "warn"
      ],
      "mappings": ";;AAAA;;;;;;;;;;;;;;;;;;;;AAEA;;;;;AAKA,IAAIA,YAAY,GAAG,SAAfA,YAAe,CAAUC,KAAV,EAAiBC,CAAjB,EAAoB;AACnC,MAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AACAC,qBAAEC,IAAF,CAAOL,KAAP,EAAc,UAAAM,IAAI,EAAI;AAClB,QAAIC,MAAM,GAAGL,MAAM,CAACM,GAAP,CAAWF,IAAX,KAAoB,CAAjC;AACAJ,IAAAA,MAAM,CAACO,GAAP,CAAWH,IAAX,EAAiBC,MAAM,GAAG,CAA1B;AACH,GAHD;;AAIA,SAAOH,mBAAEM,KAAF,oBAAYR,MAAZ,GACFS,IADE,CACG,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAAR,IAAeC,CAAC,CAAC,CAAD,CAAD,CAAKC,aAAL,CAAmBF,CAAC,CAAC,CAAD,CAApB,CAAzB;AAAA,GADH,EAEFG,IAFE,CAEGd,CAFH,EAGFe,GAHE,CAGE;AAAA;AAAA,QAAEC,KAAF;;AAAA,WAAaA,KAAb;AAAA,GAHF,EAIFA,KAJE,EAAP;AAKH,CAXD;;AAaAC,OAAO,CAACC,IAAR,CAAapB,YAAY,CAAC,CAAC,GAAD,EAAM,MAAN,EAAc,UAAd,EAA0B,GAA1B,EAA+B,MAA/B,EAAuC,QAAvC,CAAD,EAAmD,CAAnD,CAAzB",
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "sourcesContent": [
        "import _ from 'lodash';\n\n/**\n * @param {string[]} words\n * @param {number} k\n * @return {string[]}\n */\nvar topKFrequent = function (words, k) {\n    const result = new Map();\n    _.each(words, word => {\n        let before = result.get(word) || 0;\n        result.set(word, before + 1);\n    });\n    return _.chain([...result])\n        .sort((a, b) => b[1] - a[1] || b[0].localeCompare(a[0]))\n        .take(k)\n        .map(([value]) => value)\n        .value();\n};\n\nconsole.warn(topKFrequent(['i', 'love', 'leetcode', 'i', 'love', 'coding'], 3));"
      ]
    },
    "sourceType": "script",
    "mtime": 1566536378569
  },
  "{\"sourceRoot\":\"/Users/lynss/frontProjects/algorithm/js-algorithm/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"filename\":\"/Users/lynss/frontProjects/algorithm/js-algorithm/src/add-strings.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "filename": "/Users/lynss/frontProjects/algorithm/js-algorithm/src/add-strings.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lynss/frontProjects/algorithm/js-algorithm/src/add-strings.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lynss/frontProjects/algorithm/js-algorithm/src/add-strings.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm/src",
        "sourceFileName": "add-strings.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * https://leetcode.com/problems/add-strings/\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function addStrings(num1, num2) {\n  var up = 0;\n  return _lodash[\"default\"].zip(num1.split(''), num2.split('')).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        _ref2$ = _ref2[0],\n        a = _ref2$ === void 0 ? 0 : _ref2$,\n        _ref2$2 = _ref2[1],\n        b = _ref2$2 === void 0 ? 0 : _ref2$2;\n\n    var total = up + +a + +b;\n\n    if (total >= 10) {\n      total -= 10;\n      up = 1;\n    } else {\n      up = 0;\n    }\n\n    return total;\n  }).join('');\n};\n\nconsole.warn(addStrings('0', '0'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1zdHJpbmdzLmpzIl0sIm5hbWVzIjpbImFkZFN0cmluZ3MiLCJudW0xIiwibnVtMiIsInVwIiwiXyIsInppcCIsInNwbGl0IiwibWFwIiwiYSIsImIiLCJ0b3RhbCIsImpvaW4iLCJjb25zb2xlIiwid2FybiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7O0FBRUE7Ozs7OztBQU1BLElBQUlBLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQVVDLElBQVYsRUFBZ0JDLElBQWhCLEVBQXNCO0FBQ25DLE1BQUlDLEVBQUUsR0FBRyxDQUFUO0FBQ0EsU0FBT0MsbUJBQUVDLEdBQUYsQ0FBTUosSUFBSSxDQUFDSyxLQUFMLENBQVcsRUFBWCxDQUFOLEVBQXNCSixJQUFJLENBQUNJLEtBQUwsQ0FBVyxFQUFYLENBQXRCLEVBQXNDQyxHQUF0QyxDQUEwQyxnQkFBb0I7QUFBQTtBQUFBO0FBQUEsUUFBbEJDLENBQWtCLHVCQUFkLENBQWM7QUFBQTtBQUFBLFFBQVhDLENBQVcsd0JBQVAsQ0FBTzs7QUFDakUsUUFBSUMsS0FBSyxHQUFHUCxFQUFFLEdBQUksQ0FBQ0ssQ0FBUCxHQUFhLENBQUNDLENBQTFCOztBQUNBLFFBQUlDLEtBQUssSUFBSSxFQUFiLEVBQWlCO0FBQ2JBLE1BQUFBLEtBQUssSUFBSSxFQUFUO0FBQ0FQLE1BQUFBLEVBQUUsR0FBRyxDQUFMO0FBQ0gsS0FIRCxNQUdPO0FBQ0hBLE1BQUFBLEVBQUUsR0FBRyxDQUFMO0FBQ0g7O0FBQ0QsV0FBT08sS0FBUDtBQUNILEdBVE0sRUFTSkMsSUFUSSxDQVNDLEVBVEQsQ0FBUDtBQVVILENBWkQ7O0FBZUFDLE9BQU8sQ0FBQ0MsSUFBUixDQUFhYixVQUFVLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FBdkIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2x5bnNzL2Zyb250UHJvamVjdHMvYWxnb3JpdGhtL2pzLWFsZ29yaXRobS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG4vKipcbiAqIGh0dHBzOi8vbGVldGNvZGUuY29tL3Byb2JsZW1zL2FkZC1zdHJpbmdzL1xuICogQHBhcmFtIHtzdHJpbmd9IG51bTFcbiAqIEBwYXJhbSB7c3RyaW5nfSBudW0yXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbnZhciBhZGRTdHJpbmdzID0gZnVuY3Rpb24gKG51bTEsIG51bTIpIHtcbiAgICBsZXQgdXAgPSAwO1xuICAgIHJldHVybiBfLnppcChudW0xLnNwbGl0KCcnKSwgbnVtMi5zcGxpdCgnJykpLm1hcCgoW2EgPSAwLCBiID0gMF0pID0+IHtcbiAgICAgICAgbGV0IHRvdGFsID0gdXAgKyAoK2EpICsgKCtiKTtcbiAgICAgICAgaWYgKHRvdGFsID49IDEwKSB7XG4gICAgICAgICAgICB0b3RhbCAtPSAxMDtcbiAgICAgICAgICAgIHVwID0gMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHVwID0gMDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdG90YWw7XG4gICAgfSkuam9pbignJyk7XG59O1xuXG5cbmNvbnNvbGUud2FybihhZGRTdHJpbmdzKCcwJywgJzAnKSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "add-strings.js"
      ],
      "names": [
        "addStrings",
        "num1",
        "num2",
        "up",
        "_",
        "zip",
        "split",
        "map",
        "a",
        "b",
        "total",
        "join",
        "console",
        "warn"
      ],
      "mappings": ";;AAAA;;;;;;;;;;;;AAEA;;;;;;AAMA,IAAIA,UAAU,GAAG,SAAbA,UAAa,CAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AACnC,MAAIC,EAAE,GAAG,CAAT;AACA,SAAOC,mBAAEC,GAAF,CAAMJ,IAAI,CAACK,KAAL,CAAW,EAAX,CAAN,EAAsBJ,IAAI,CAACI,KAAL,CAAW,EAAX,CAAtB,EAAsCC,GAAtC,CAA0C,gBAAoB;AAAA;AAAA;AAAA,QAAlBC,CAAkB,uBAAd,CAAc;AAAA;AAAA,QAAXC,CAAW,wBAAP,CAAO;;AACjE,QAAIC,KAAK,GAAGP,EAAE,GAAI,CAACK,CAAP,GAAa,CAACC,CAA1B;;AACA,QAAIC,KAAK,IAAI,EAAb,EAAiB;AACbA,MAAAA,KAAK,IAAI,EAAT;AACAP,MAAAA,EAAE,GAAG,CAAL;AACH,KAHD,MAGO;AACHA,MAAAA,EAAE,GAAG,CAAL;AACH;;AACD,WAAOO,KAAP;AACH,GATM,EASJC,IATI,CASC,EATD,CAAP;AAUH,CAZD;;AAeAC,OAAO,CAACC,IAAR,CAAab,UAAU,CAAC,GAAD,EAAM,GAAN,CAAvB",
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm/src",
      "sourcesContent": [
        "import _ from 'lodash';\n\n/**\n * https://leetcode.com/problems/add-strings/\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n    let up = 0;\n    return _.zip(num1.split(''), num2.split('')).map(([a = 0, b = 0]) => {\n        let total = up + (+a) + (+b);\n        if (total >= 10) {\n            total -= 10;\n            up = 1;\n        } else {\n            up = 0;\n        }\n        return total;\n    }).join('');\n};\n\n\nconsole.warn(addStrings('0', '0'));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567734336839
  },
  "{\"sourceRoot\":\"/Users/lynss/frontProjects/algorithm/js-algorithm/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"filename\":\"/Users/lynss/frontProjects/algorithm/js-algorithm/src/best-sightseeing-pair.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "filename": "/Users/lynss/frontProjects/algorithm/js-algorithm/src/best-sightseeing-pair.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lynss/frontProjects/algorithm/js-algorithm/src/best-sightseeing-pair.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lynss/frontProjects/algorithm/js-algorithm/src/best-sightseeing-pair.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm/src",
        "sourceFileName": "best-sightseeing-pair.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * https://leetcode.com/problems/best-sightseeing-pair/\n * @param {number[]} A\n * @return {number}\n */\nvar maxScoreSightseeingPair = function maxScoreSightseeingPair(A) {\n  var bestFirstIndex = 0;\n  var maxScore = 0;\n  var length = A.length;\n\n  for (var j = 1; j < length; j++) {\n    var first = A[bestFirstIndex];\n    var second = A[j];\n    maxScore = Math.max(maxScore, first + bestFirstIndex + second - j);\n\n    if (second + j > first + bestFirstIndex) {\n      bestFirstIndex = j;\n    }\n  }\n\n  return maxScore;\n};\n\nconsole.assert(maxScoreSightseeingPair([8, 1, 5, 2, 6]) === 11, 'Unexpected result');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJlc3Qtc2lnaHRzZWVpbmctcGFpci5qcyJdLCJuYW1lcyI6WyJtYXhTY29yZVNpZ2h0c2VlaW5nUGFpciIsIkEiLCJiZXN0Rmlyc3RJbmRleCIsIm1heFNjb3JlIiwibGVuZ3RoIiwiaiIsImZpcnN0Iiwic2Vjb25kIiwiTWF0aCIsIm1heCIsImNvbnNvbGUiLCJhc3NlcnQiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7O0FBS0EsSUFBSUEsdUJBQXVCLEdBQUcsU0FBMUJBLHVCQUEwQixDQUFTQyxDQUFULEVBQVk7QUFDdEMsTUFBSUMsY0FBYyxHQUFHLENBQXJCO0FBQ0EsTUFBSUMsUUFBUSxHQUFHLENBQWY7QUFDQSxNQUFNQyxNQUFNLEdBQUdILENBQUMsQ0FBQ0csTUFBakI7O0FBQ0EsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRCxNQUFwQixFQUE0QkMsQ0FBQyxFQUE3QixFQUFpQztBQUM3QixRQUFNQyxLQUFLLEdBQUdMLENBQUMsQ0FBQ0MsY0FBRCxDQUFmO0FBQ0EsUUFBTUssTUFBTSxHQUFHTixDQUFDLENBQUNJLENBQUQsQ0FBaEI7QUFDQUYsSUFBQUEsUUFBUSxHQUFHSyxJQUFJLENBQUNDLEdBQUwsQ0FBU04sUUFBVCxFQUFtQkcsS0FBSyxHQUFHSixjQUFSLEdBQXlCSyxNQUF6QixHQUFrQ0YsQ0FBckQsQ0FBWDs7QUFDQSxRQUFJRSxNQUFNLEdBQUdGLENBQVQsR0FBYUMsS0FBSyxHQUFHSixjQUF6QixFQUF5QztBQUNyQ0EsTUFBQUEsY0FBYyxHQUFHRyxDQUFqQjtBQUNIO0FBQ0o7O0FBQ0QsU0FBT0YsUUFBUDtBQUNILENBYkQ7O0FBZUFPLE9BQU8sQ0FBQ0MsTUFBUixDQUFlWCx1QkFBdUIsQ0FBQyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLENBQUQsQ0FBdkIsS0FBNkMsRUFBNUQsRUFBZ0UsbUJBQWhFIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9seW5zcy9mcm9udFByb2plY3RzL2FsZ29yaXRobS9qcy1hbGdvcml0aG0vc3JjIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBodHRwczovL2xlZXRjb2RlLmNvbS9wcm9ibGVtcy9iZXN0LXNpZ2h0c2VlaW5nLXBhaXIvXG4gKiBAcGFyYW0ge251bWJlcltdfSBBXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbnZhciBtYXhTY29yZVNpZ2h0c2VlaW5nUGFpciA9IGZ1bmN0aW9uKEEpIHtcbiAgICBsZXQgYmVzdEZpcnN0SW5kZXggPSAwO1xuICAgIGxldCBtYXhTY29yZSA9IDA7XG4gICAgY29uc3QgbGVuZ3RoID0gQS5sZW5ndGg7XG4gICAgZm9yIChsZXQgaiA9IDE7IGogPCBsZW5ndGg7IGorKykge1xuICAgICAgICBjb25zdCBmaXJzdCA9IEFbYmVzdEZpcnN0SW5kZXhdO1xuICAgICAgICBjb25zdCBzZWNvbmQgPSBBW2pdO1xuICAgICAgICBtYXhTY29yZSA9IE1hdGgubWF4KG1heFNjb3JlLCBmaXJzdCArIGJlc3RGaXJzdEluZGV4ICsgc2Vjb25kIC0gaik7XG4gICAgICAgIGlmIChzZWNvbmQgKyBqID4gZmlyc3QgKyBiZXN0Rmlyc3RJbmRleCkge1xuICAgICAgICAgICAgYmVzdEZpcnN0SW5kZXggPSBqO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtYXhTY29yZTtcbn07XG5cbmNvbnNvbGUuYXNzZXJ0KG1heFNjb3JlU2lnaHRzZWVpbmdQYWlyKFs4LCAxLCA1LCAyLCA2XSkgPT09IDExLCAnVW5leHBlY3RlZCByZXN1bHQnKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "best-sightseeing-pair.js"
      ],
      "names": [
        "maxScoreSightseeingPair",
        "A",
        "bestFirstIndex",
        "maxScore",
        "length",
        "j",
        "first",
        "second",
        "Math",
        "max",
        "console",
        "assert"
      ],
      "mappings": ";;AAAA;;;;;AAKA,IAAIA,uBAAuB,GAAG,SAA1BA,uBAA0B,CAASC,CAAT,EAAY;AACtC,MAAIC,cAAc,GAAG,CAArB;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAMC,MAAM,GAAGH,CAAC,CAACG,MAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,EAA7B,EAAiC;AAC7B,QAAMC,KAAK,GAAGL,CAAC,CAACC,cAAD,CAAf;AACA,QAAMK,MAAM,GAAGN,CAAC,CAACI,CAAD,CAAhB;AACAF,IAAAA,QAAQ,GAAGK,IAAI,CAACC,GAAL,CAASN,QAAT,EAAmBG,KAAK,GAAGJ,cAAR,GAAyBK,MAAzB,GAAkCF,CAArD,CAAX;;AACA,QAAIE,MAAM,GAAGF,CAAT,GAAaC,KAAK,GAAGJ,cAAzB,EAAyC;AACrCA,MAAAA,cAAc,GAAGG,CAAjB;AACH;AACJ;;AACD,SAAOF,QAAP;AACH,CAbD;;AAeAO,OAAO,CAACC,MAAR,CAAeX,uBAAuB,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAD,CAAvB,KAA6C,EAA5D,EAAgE,mBAAhE",
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm/src",
      "sourcesContent": [
        "/**\n * https://leetcode.com/problems/best-sightseeing-pair/\n * @param {number[]} A\n * @return {number}\n */\nvar maxScoreSightseeingPair = function(A) {\n    let bestFirstIndex = 0;\n    let maxScore = 0;\n    const length = A.length;\n    for (let j = 1; j < length; j++) {\n        const first = A[bestFirstIndex];\n        const second = A[j];\n        maxScore = Math.max(maxScore, first + bestFirstIndex + second - j);\n        if (second + j > first + bestFirstIndex) {\n            bestFirstIndex = j;\n        }\n    }\n    return maxScore;\n};\n\nconsole.assert(maxScoreSightseeingPair([8, 1, 5, 2, 6]) === 11, 'Unexpected result');\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568018357156
  },
  "{\"sourceRoot\":\"/Users/lynss/frontProjects/algorithm/js-algorithm/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"filename\":\"/Users/lynss/frontProjects/algorithm/js-algorithm/src/intersection-size-two.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lynss/frontProjects/algorithm/js-algorithm\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "filename": "/Users/lynss/frontProjects/algorithm/js-algorithm/src/intersection-size-two.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lynss/frontProjects/algorithm/js-algorithm",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lynss/frontProjects/algorithm/js-algorithm/src/intersection-size-two.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lynss/frontProjects/algorithm/js-algorithm/src/intersection-size-two.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm/src",
        "sourceFileName": "intersection-size-two.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * https://leetcode.com/problems/set-intersection-size-at-least-two/\n * @param {number[][]} intervals\n * @return {number}\n */\nvar intersectionSizeTwo = function intersectionSizeTwo(intervals) {\n  var _intervals$sort = intervals.sort(function (a, b) {\n    if (a[1] !== b[1]) {\n      return a[1] - b[1];\n    } else {\n      return b[0] - a[0];\n    }\n  }),\n      _intervals$sort2 = _toArray(_intervals$sort),\n      initial = _intervals$sort2[0],\n      sortedIntervals = _intervals$sort2.slice(1);\n\n  var result = sortedIntervals.reduce(function (acc, current) {\n    var _current = _slicedToArray(current, 2),\n        begin = _current[0],\n        end = _current[1];\n\n    var length = acc.length; //没有交集\n\n    if (begin > acc[length - 1]) {\n      acc.push(end - 1);\n      acc.push(end);\n    } else if (begin <= acc[length - 1] && begin > acc[length - 2]) {\n      acc.push(end);\n    } //包含关系\n\n\n    console.warn(acc);\n    return acc;\n  }, [initial[1] - 1, initial[1]]);\n  return result.length;\n};\n\nconsole.assert(intersectionSizeTwo([[6, 21], [1, 15], [15, 20], [10, 21], [0, 7]]) === 4, 'Unexpected result'); // console.assert(intersectionSizeTwo([[33,44],[42,43],[13,37],[24,33],[24,33],[25,48],[10,47],[18,24],[29,37],[7,34]]) === 6, 'Unexpected result');\n// console.assert(intersectionSizeTwo([[0, 3], [4, 5], [1, 3], [0, 2], [1, 5]]) === 4, 'Unexpected result');\n// console.assert(intersectionSizeTwo([[12, 19], [18, 25], [4, 6], [19, 24], [19, 22]]) === 5, 'Unexpected result');\n// console.assert(intersectionSizeTwo([[1, 3], [1, 4], [2, 5], [3, 5]]) === 3, 'Unexpected result');\n// console.assert(intersectionSizeTwo([[1, 2], [2, 3], [2, 4], [4, 5]]) === 5, 'Unexpected result');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludGVyc2VjdGlvbi1zaXplLXR3by5qcyJdLCJuYW1lcyI6WyJpbnRlcnNlY3Rpb25TaXplVHdvIiwiaW50ZXJ2YWxzIiwic29ydCIsImEiLCJiIiwiaW5pdGlhbCIsInNvcnRlZEludGVydmFscyIsInJlc3VsdCIsInJlZHVjZSIsImFjYyIsImN1cnJlbnQiLCJiZWdpbiIsImVuZCIsImxlbmd0aCIsInB1c2giLCJjb25zb2xlIiwid2FybiIsImFzc2VydCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7QUFLQSxJQUFJQSxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQXNCLENBQVVDLFNBQVYsRUFBcUI7QUFBQSx3QkFDTkEsU0FBUyxDQUFDQyxJQUFWLENBQWUsVUFBQ0MsQ0FBRCxFQUFJQyxDQUFKLEVBQVU7QUFDMUQsUUFBSUQsQ0FBQyxDQUFDLENBQUQsQ0FBRCxLQUFTQyxDQUFDLENBQUMsQ0FBRCxDQUFkLEVBQW1CO0FBQ2YsYUFBT0QsQ0FBQyxDQUFDLENBQUQsQ0FBRCxHQUFPQyxDQUFDLENBQUMsQ0FBRCxDQUFmO0FBQ0gsS0FGRCxNQUVPO0FBQ0gsYUFBT0EsQ0FBQyxDQUFDLENBQUQsQ0FBRCxHQUFPRCxDQUFDLENBQUMsQ0FBRCxDQUFmO0FBQ0g7QUFDSixHQU5vQyxDQURNO0FBQUE7QUFBQSxNQUNwQ0UsT0FEb0M7QUFBQSxNQUN6QkMsZUFEeUI7O0FBUTNDLE1BQU1DLE1BQU0sR0FBR0QsZUFBZSxDQUFDRSxNQUFoQixDQUF1QixVQUFDQyxHQUFELEVBQU1DLE9BQU4sRUFBa0I7QUFBQSxrQ0FDL0JBLE9BRCtCO0FBQUEsUUFDN0NDLEtBRDZDO0FBQUEsUUFDdENDLEdBRHNDOztBQUVwRCxRQUFNQyxNQUFNLEdBQUdKLEdBQUcsQ0FBQ0ksTUFBbkIsQ0FGb0QsQ0FJcEQ7O0FBQ0EsUUFBSUYsS0FBSyxHQUFHRixHQUFHLENBQUNJLE1BQU0sR0FBRyxDQUFWLENBQWYsRUFBNkI7QUFDekJKLE1BQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTRixHQUFHLEdBQUcsQ0FBZjtBQUNBSCxNQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBU0YsR0FBVDtBQUNILEtBSEQsTUFHTyxJQUFJRCxLQUFLLElBQUlGLEdBQUcsQ0FBQ0ksTUFBTSxHQUFHLENBQVYsQ0FBWixJQUE0QkYsS0FBSyxHQUFHRixHQUFHLENBQUNJLE1BQU0sR0FBRyxDQUFWLENBQTNDLEVBQXlEO0FBQzVESixNQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBU0YsR0FBVDtBQUNILEtBVm1ELENBV3BEOzs7QUFDQUcsSUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWFQLEdBQWI7QUFDQSxXQUFPQSxHQUFQO0FBQ0gsR0FkYyxFQWNaLENBQUNKLE9BQU8sQ0FBQyxDQUFELENBQVAsR0FBYSxDQUFkLEVBQWlCQSxPQUFPLENBQUMsQ0FBRCxDQUF4QixDQWRZLENBQWY7QUFlQSxTQUFPRSxNQUFNLENBQUNNLE1BQWQ7QUFDSCxDQXhCRDs7QUEwQkFFLE9BQU8sQ0FBQ0UsTUFBUixDQUFlakIsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUQsRUFBSSxFQUFKLENBQUQsRUFBVSxDQUFDLENBQUQsRUFBSSxFQUFKLENBQVYsRUFBbUIsQ0FBQyxFQUFELEVBQUssRUFBTCxDQUFuQixFQUE2QixDQUFDLEVBQUQsRUFBSyxFQUFMLENBQTdCLEVBQXVDLENBQUMsQ0FBRCxFQUFJLENBQUosQ0FBdkMsQ0FBRCxDQUFuQixLQUF3RSxDQUF2RixFQUEwRixtQkFBMUYsRSxDQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiL1VzZXJzL2x5bnNzL2Zyb250UHJvamVjdHMvYWxnb3JpdGhtL2pzLWFsZ29yaXRobS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGh0dHBzOi8vbGVldGNvZGUuY29tL3Byb2JsZW1zL3NldC1pbnRlcnNlY3Rpb24tc2l6ZS1hdC1sZWFzdC10d28vXG4gKiBAcGFyYW0ge251bWJlcltdW119IGludGVydmFsc1xuICogQHJldHVybiB7bnVtYmVyfVxuICovXG52YXIgaW50ZXJzZWN0aW9uU2l6ZVR3byA9IGZ1bmN0aW9uIChpbnRlcnZhbHMpIHtcbiAgICBjb25zdCBbaW5pdGlhbCwuLi5zb3J0ZWRJbnRlcnZhbHNdID0gaW50ZXJ2YWxzLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgaWYgKGFbMV0gIT09IGJbMV0pIHtcbiAgICAgICAgICAgIHJldHVybiBhWzFdIC0gYlsxXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBiWzBdIC0gYVswXTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnN0IHJlc3VsdCA9IHNvcnRlZEludGVydmFscy5yZWR1Y2UoKGFjYywgY3VycmVudCkgPT4ge1xuICAgICAgICBjb25zdCBbYmVnaW4sIGVuZF0gPSBjdXJyZW50O1xuICAgICAgICBjb25zdCBsZW5ndGggPSBhY2MubGVuZ3RoO1xuXG4gICAgICAgIC8v5rKh5pyJ5Lqk6ZuGXG4gICAgICAgIGlmIChiZWdpbiA+IGFjY1tsZW5ndGggLSAxXSkge1xuICAgICAgICAgICAgYWNjLnB1c2goZW5kIC0gMSk7XG4gICAgICAgICAgICBhY2MucHVzaChlbmQpO1xuICAgICAgICB9IGVsc2UgaWYgKGJlZ2luIDw9IGFjY1tsZW5ndGggLSAxXSAmJiBiZWdpbiA+IGFjY1tsZW5ndGggLSAyXSkge1xuICAgICAgICAgICAgYWNjLnB1c2goZW5kKTtcbiAgICAgICAgfVxuICAgICAgICAvL+WMheWQq+WFs+ezu1xuICAgICAgICBjb25zb2xlLndhcm4oYWNjKTtcbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCBbaW5pdGlhbFsxXSAtIDEsIGluaXRpYWxbMV1dKTtcbiAgICByZXR1cm4gcmVzdWx0Lmxlbmd0aDtcbn07XG5cbmNvbnNvbGUuYXNzZXJ0KGludGVyc2VjdGlvblNpemVUd28oW1s2LCAyMV0sIFsxLCAxNV0sIFsxNSwgMjBdLCBbMTAsIDIxXSwgWzAsIDddXSkgPT09IDQsICdVbmV4cGVjdGVkIHJlc3VsdCcpO1xuLy8gY29uc29sZS5hc3NlcnQoaW50ZXJzZWN0aW9uU2l6ZVR3byhbWzMzLDQ0XSxbNDIsNDNdLFsxMywzN10sWzI0LDMzXSxbMjQsMzNdLFsyNSw0OF0sWzEwLDQ3XSxbMTgsMjRdLFsyOSwzN10sWzcsMzRdXSkgPT09IDYsICdVbmV4cGVjdGVkIHJlc3VsdCcpO1xuLy8gY29uc29sZS5hc3NlcnQoaW50ZXJzZWN0aW9uU2l6ZVR3byhbWzAsIDNdLCBbNCwgNV0sIFsxLCAzXSwgWzAsIDJdLCBbMSwgNV1dKSA9PT0gNCwgJ1VuZXhwZWN0ZWQgcmVzdWx0Jyk7XG4vLyBjb25zb2xlLmFzc2VydChpbnRlcnNlY3Rpb25TaXplVHdvKFtbMTIsIDE5XSwgWzE4LCAyNV0sIFs0LCA2XSwgWzE5LCAyNF0sIFsxOSwgMjJdXSkgPT09IDUsICdVbmV4cGVjdGVkIHJlc3VsdCcpO1xuLy8gY29uc29sZS5hc3NlcnQoaW50ZXJzZWN0aW9uU2l6ZVR3byhbWzEsIDNdLCBbMSwgNF0sIFsyLCA1XSwgWzMsIDVdXSkgPT09IDMsICdVbmV4cGVjdGVkIHJlc3VsdCcpO1xuLy8gY29uc29sZS5hc3NlcnQoaW50ZXJzZWN0aW9uU2l6ZVR3byhbWzEsIDJdLCBbMiwgM10sIFsyLCA0XSwgWzQsIDVdXSkgPT09IDUsICdVbmV4cGVjdGVkIHJlc3VsdCcpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "intersection-size-two.js"
      ],
      "names": [
        "intersectionSizeTwo",
        "intervals",
        "sort",
        "a",
        "b",
        "initial",
        "sortedIntervals",
        "result",
        "reduce",
        "acc",
        "current",
        "begin",
        "end",
        "length",
        "push",
        "console",
        "warn",
        "assert"
      ],
      "mappings": ";;;;;;;;;;;;;;AAAA;;;;;AAKA,IAAIA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUC,SAAV,EAAqB;AAAA,wBACNA,SAAS,CAACC,IAAV,CAAe,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC1D,QAAID,CAAC,CAAC,CAAD,CAAD,KAASC,CAAC,CAAC,CAAD,CAAd,EAAmB;AACf,aAAOD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAf;AACH,KAFD,MAEO;AACH,aAAOA,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAAf;AACH;AACJ,GANoC,CADM;AAAA;AAAA,MACpCE,OADoC;AAAA,MACzBC,eADyB;;AAQ3C,MAAMC,MAAM,GAAGD,eAAe,CAACE,MAAhB,CAAuB,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAAA,kCAC/BA,OAD+B;AAAA,QAC7CC,KAD6C;AAAA,QACtCC,GADsC;;AAEpD,QAAMC,MAAM,GAAGJ,GAAG,CAACI,MAAnB,CAFoD,CAIpD;;AACA,QAAIF,KAAK,GAAGF,GAAG,CAACI,MAAM,GAAG,CAAV,CAAf,EAA6B;AACzBJ,MAAAA,GAAG,CAACK,IAAJ,CAASF,GAAG,GAAG,CAAf;AACAH,MAAAA,GAAG,CAACK,IAAJ,CAASF,GAAT;AACH,KAHD,MAGO,IAAID,KAAK,IAAIF,GAAG,CAACI,MAAM,GAAG,CAAV,CAAZ,IAA4BF,KAAK,GAAGF,GAAG,CAACI,MAAM,GAAG,CAAV,CAA3C,EAAyD;AAC5DJ,MAAAA,GAAG,CAACK,IAAJ,CAASF,GAAT;AACH,KAVmD,CAWpD;;;AACAG,IAAAA,OAAO,CAACC,IAAR,CAAaP,GAAb;AACA,WAAOA,GAAP;AACH,GAdc,EAcZ,CAACJ,OAAO,CAAC,CAAD,CAAP,GAAa,CAAd,EAAiBA,OAAO,CAAC,CAAD,CAAxB,CAdY,CAAf;AAeA,SAAOE,MAAM,CAACM,MAAd;AACH,CAxBD;;AA0BAE,OAAO,CAACE,MAAR,CAAejB,mBAAmB,CAAC,CAAC,CAAC,CAAD,EAAI,EAAJ,CAAD,EAAU,CAAC,CAAD,EAAI,EAAJ,CAAV,EAAmB,CAAC,EAAD,EAAK,EAAL,CAAnB,EAA6B,CAAC,EAAD,EAAK,EAAL,CAA7B,EAAuC,CAAC,CAAD,EAAI,CAAJ,CAAvC,CAAD,CAAnB,KAAwE,CAAvF,EAA0F,mBAA1F,E,CACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "/Users/lynss/frontProjects/algorithm/js-algorithm/src",
      "sourcesContent": [
        "/**\n * https://leetcode.com/problems/set-intersection-size-at-least-two/\n * @param {number[][]} intervals\n * @return {number}\n */\nvar intersectionSizeTwo = function (intervals) {\n    const [initial,...sortedIntervals] = intervals.sort((a, b) => {\n        if (a[1] !== b[1]) {\n            return a[1] - b[1];\n        } else {\n            return b[0] - a[0];\n        }\n    });\n    const result = sortedIntervals.reduce((acc, current) => {\n        const [begin, end] = current;\n        const length = acc.length;\n\n        //没有交集\n        if (begin > acc[length - 1]) {\n            acc.push(end - 1);\n            acc.push(end);\n        } else if (begin <= acc[length - 1] && begin > acc[length - 2]) {\n            acc.push(end);\n        }\n        //包含关系\n        console.warn(acc);\n        return acc;\n    }, [initial[1] - 1, initial[1]]);\n    return result.length;\n};\n\nconsole.assert(intersectionSizeTwo([[6, 21], [1, 15], [15, 20], [10, 21], [0, 7]]) === 4, 'Unexpected result');\n// console.assert(intersectionSizeTwo([[33,44],[42,43],[13,37],[24,33],[24,33],[25,48],[10,47],[18,24],[29,37],[7,34]]) === 6, 'Unexpected result');\n// console.assert(intersectionSizeTwo([[0, 3], [4, 5], [1, 3], [0, 2], [1, 5]]) === 4, 'Unexpected result');\n// console.assert(intersectionSizeTwo([[12, 19], [18, 25], [4, 6], [19, 24], [19, 22]]) === 5, 'Unexpected result');\n// console.assert(intersectionSizeTwo([[1, 3], [1, 4], [2, 5], [3, 5]]) === 3, 'Unexpected result');\n// console.assert(intersectionSizeTwo([[1, 2], [2, 3], [2, 4], [4, 5]]) === 5, 'Unexpected result');\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568101875628
  }
}